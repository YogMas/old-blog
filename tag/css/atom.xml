<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://github.com/YogMas/YogMas.github.io</id>
    <title>S1m • Posts by &#34;css&#34; tag</title>
    <link href="https://github.com/YogMas/YogMas.github.io" />
    <updated>2021-11-05T16:00:00.000Z</updated>
    <category term="C语言" />
    <category term="Latex" />
    <category term="操作系统" />
    <category term="Css" />
    <category term="vue" />
    <category term="python" />
    <category term="Git" />
    <category term="Html" />
    <category term="java" />
    <category term="机器学习" />
    <category term="Javascript" />
    <category term="icoding答案" />
    <category term="算法啊" />
    <category term="计算机组成原理" />
    <category term="课内课程" />
    <entry>
        <id>https://github.com/YogMas/YogMas.github.io/2021/11/06/css-xin/</id>
        <title>Css新</title>
        <link rel="alternate" href="https://github.com/YogMas/YogMas.github.io/2021/11/06/css-xin/"/>
        <content type="html">&lt;h1 id=&#34;css新&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#css新&#34;&gt;#&lt;/a&gt; CSS (新)&lt;/h1&gt;
&lt;p&gt;复习 (好吧 太久没用忘了 其实是重新学习过程) CSS 时记忆的笔记&lt;/p&gt;
&lt;h2 id=&#34;定位position&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定位position&#34;&gt;#&lt;/a&gt; 定位 (position)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;static: 正常流定位&lt;/li&gt;
&lt;li&gt;relative: 相对定位&lt;/li&gt;
&lt;li&gt;absolute,fixed: 绝对定位&lt;/li&gt;
&lt;li&gt;sticky: 粘性定位&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;static正常流定位&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#static正常流定位&#34;&gt;#&lt;/a&gt; Static 正常流定位&lt;/h3&gt;
&lt;p&gt;按照从上到下文档刷新的方式，就是最默认的定位方式&lt;/p&gt;
&lt;h3 id=&#34;relative相对定位&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#relative相对定位&#34;&gt;#&lt;/a&gt; relative 相对定位&lt;/h3&gt;
&lt;p&gt;相对于原位置的定位，可以相对于原位置进行位置的移动&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;相对定位会保留原有的样式&lt;/strong&gt;，意思就是说相对定位移动后，原来那个位置的样式，不会被覆盖，可以理解为被隐藏了但是还在&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token property&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;relative&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token property&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;token property&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;token property&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;token property&#34;&gt;bottom&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;absolute绝对定位&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#absolute绝对定位&#34;&gt;#&lt;/a&gt; absolute 绝对定位&lt;/h3&gt;
&lt;p&gt;absolute 是相对于上一个&lt;strong&gt;非 static 定位&lt;/strong&gt;的祖宗节点的位置&lt;/p&gt;
&lt;p&gt;意思就是说 absolute 会向上找，找到一个不会 static 定位的祖宗节点 (最上面是&lt;strong&gt; body&lt;/strong&gt;),top 相当于距离这个父节点顶部的距离，其他类似&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token property&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;absolute&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token property&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;token property&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;token property&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;token property&#34;&gt;bottom&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;fixed固定定位&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#fixed固定定位&#34;&gt;#&lt;/a&gt; fixed 固定定位&lt;/h3&gt;
&lt;p&gt;fixed 是相对于&lt;strong&gt;整个视窗&lt;/strong&gt;的位移，也是固定不变的&lt;/p&gt;
&lt;h3 id=&#34;static粘性定位&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#static粘性定位&#34;&gt;#&lt;/a&gt; static 粘性定位&lt;/h3&gt;
&lt;p&gt;当粘性定位的盒子的&lt;strong&gt;真实位置&lt;/strong&gt;在视窗内部的时候，他是正常显示的，但是当他要脱离视窗的时候，他会像固定定位一样，导致不脱离视窗&lt;/p&gt;
&lt;h2 id=&#34;浮动&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#浮动&#34;&gt;#&lt;/a&gt; 浮动&lt;/h2&gt;
&lt;p&gt;块是会自动换行的，加上 float 之后，可以放在一行的会放在一行，一行无法放下时再进行换行&lt;/p&gt;
&lt;p&gt;新的未浮动块会在浮动块的上方而不是排布在后方，要排布在后方可以清除浮动块的影响 使用 clear&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token property&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;left
&lt;span class=&#34;token property&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;left/right/both&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;flex布局&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#flex布局&#34;&gt;#&lt;/a&gt; flex 布局&lt;/h2&gt;
&lt;p&gt;弹性布局，也就是当拉伸视窗的时候，布局随着视窗的改变会自动变化&lt;/p&gt;
&lt;p&gt;定义在&lt;strong&gt;父节点盒子上&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;flex-direction&lt;/code&gt; ： 属性指定了内部元素是如何在 flex 容器中&lt;strong&gt;布局&lt;/strong&gt;的，&lt;strong&gt;定义了主轴的方向&lt;/strong&gt; (正方向或反方向)。
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;row&lt;/code&gt; :flex 容器的主轴被定义为与文本方向相同。 主轴起点和主轴终点与内容方向相同。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;row-reverse&lt;/code&gt; : 表现和 row 相同，但是置换了主轴起点和主轴终点。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;column&lt;/code&gt; :flex 容器的主轴和块轴相同。主轴起点与主轴终点和书写模式的前后点相同&lt;/li&gt;
&lt;li&gt;&lt;code&gt;column-reverse&lt;/code&gt; : 表现和 column 相同，但是置换了主轴起点和主轴终点&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flex-wrap&lt;/code&gt; : 指定 flex 元素&lt;strong&gt;单行显示还是多行显示&lt;/strong&gt;。如果允许换行，这个属性允许你控制行的堆叠方向。
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nowrap&lt;/code&gt; : 默认值。不换行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wrap&lt;/code&gt; : 换行，第一行在上方。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wrap-reverse&lt;/code&gt; : 换行，第一行在下方。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flex-flow&lt;/code&gt; : &lt;code&gt;flex-direction&lt;/code&gt;  和  &lt;code&gt;flex-wrap&lt;/code&gt;  的简写。默认值为： &lt;code&gt;row nowrap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;justify-content&lt;/code&gt; : 属性定义了浏览器之间，如何分配顺着弹性容器主轴 (或者网格行轴) 的元素之间及其周围的空间。也就是&lt;strong&gt;控制横向对齐方式&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;flex-start&lt;/code&gt; ：默认值。左对齐。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flex-end&lt;/code&gt; ：右对齐。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;space-between&lt;/code&gt; ：左右两段对齐。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;space-around&lt;/code&gt; ：在每行上均匀分配弹性元素。相邻元素间距离相同。每行第一个元素到行首的距离和每行最后一个元素到行尾的距离将会是相邻元素之间距离的一半。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;space-evenly&lt;/code&gt; ：flex 项都沿着主轴均匀分布在指定的对齐容器中。相邻 flex 项之间的间距，主轴起始位置到第一个 flex 项的间距，主轴结束位置到最后一个 flex 项的间距，都完全一样。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;align-items&lt;/code&gt; ：控制&lt;strong&gt;纵轴 (交叉轴&lt;/strong&gt;对齐)
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;flex-start&lt;/code&gt; ：元素向主轴起点对齐。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flex-end&lt;/code&gt; ：元素向主轴终点对齐。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;center&lt;/code&gt; ：元素在侧轴居中。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;stretch&lt;/code&gt; ：弹性元素被在侧轴方向被拉伸到与容器相同的高度或宽度。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;align-content&lt;/code&gt; : 与 &lt;code&gt;align-items&lt;/code&gt;  类似但是有以下区别
&lt;ul&gt;
&lt;li&gt;前者会均匀分布，后者会使所有行紧贴在一起&lt;/li&gt;
&lt;li&gt;当只有一行的时候，前者仍然会居中，后者会失去居中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;定义在&lt;strong&gt; flex 盒子内部元素中&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;order&lt;/code&gt; : 定义 &lt;code&gt;flex&lt;/code&gt;  项目的顺序，值越小越靠前。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;flex-grow&lt;/code&gt; :CSS 属性 flex-grow CSS 设置 flex 项主尺寸 的 flex 增长系数。&lt;strong&gt;负值无效，默认为 0。&lt;/strong&gt; &lt;strong&gt;也就是当视窗变大的时候 块也等比例变大&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;flex-shrink&lt;/code&gt; : 属性指定了 flex 元素的收缩规则。flex 元素仅在默认宽度之和大于容器的时候才会发生收缩，其收缩的大小是依据 flex-shrink 的值。&lt;strong&gt;负值无效，默认为 1。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;flex-basis&lt;/code&gt; : 设置默认宽度，&lt;strong&gt; 优先级大于默认 width&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;flex&lt;/code&gt; : &lt;code&gt;flex-grow&lt;/code&gt; 、 &lt;code&gt;flex-shrink&lt;/code&gt; 、 &lt;code&gt;flex-basis&lt;/code&gt;  的缩写。&lt;/p&gt;
&lt;p&gt;常用取值： &lt;code&gt;flex: 1 1 auto&lt;/code&gt;        &lt;code&gt;flex: 0 0 auto&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="Css" />
        <updated>2021-11-05T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://github.com/YogMas/YogMas.github.io/2021/11/06/css1/</id>
        <title>Css-first</title>
        <link rel="alternate" href="https://github.com/YogMas/YogMas.github.io/2021/11/06/css1/"/>
        <content type="html">&lt;h1 id=&#34;css1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#css1&#34;&gt;#&lt;/a&gt; css1&lt;/h1&gt;
&lt;h3 id=&#34;the-article-from-yogmas-also-sam&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#the-article-from-yogmas-also-sam&#34;&gt;#&lt;/a&gt; the article from yogmas also sam&lt;/h3&gt;
&lt;h4 id=&#34;1css基本架构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1css基本架构&#34;&gt;#&lt;/a&gt; 1.css 基本架构&lt;/h4&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt; 
&amp;lt;head&amp;gt;
&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
 &amp;lt;/html&amp;gt;
 style为css放置位置
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;前期学习先将 css 放置在 html 文件夹里面后期会单独利用 css 文件来写 css&lt;/p&gt;
&lt;h4 id=&#34;2选择器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2选择器&#34;&gt;#&lt;/a&gt; 2. 选择器&lt;/h4&gt;
&lt;h6 id=&#34;标签选择器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#标签选择器&#34;&gt;#&lt;/a&gt; 标签选择器&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;选择器 {样式}&lt;br&gt;
 给谁改样式 {改什么样式}&lt;br&gt;
eg.p { color: red;&lt;br&gt;
font-size: 12px; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;标签选择器为大类选择，同一类标签全部都会被 css 修改&lt;/p&gt;
&lt;h6 id=&#34;类选择器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#类选择器&#34;&gt;#&lt;/a&gt; 类选择器&lt;/h6&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;.id {} 
eg .red {color:red;}
&amp;lt;# class=&#34;id&#34;&amp;gt;  &amp;lt;/#&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里的 ID 还需要与 html 中的 class 相互匹配 #可以替换成任何你想选择的类别 id 可以替换成任何你命名的字母或者单词&lt;br&gt;
&lt;strong&gt;类选择器口诀：样式点定义  结构类 (class) 调用  一个或多个 开发最常用&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/IQmbIf&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQmbIf.png&#34; alt=&#34;IQmbIf.png&#34;&gt;&lt;/a&gt;&lt;br&gt;
 同时类选择器可以有多个 ID 都会起作用 中间用空格隔开 例如&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/IQmHdP&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQmHdP.png&#34; alt=&#34;IQmHdP.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;id选择器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#id选择器&#34;&gt;#&lt;/a&gt; id 选择器&lt;/h6&gt;
&lt;p&gt;id 选择器与类选择器相似，不过 ID 选择器只能使用一次 并且一个 ID 只能调用一次&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;#ID {}
&amp;lt;XX id=&#34;&#34;&amp;gt;  &amp;lt;/XX&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;h6 id=&#34;通配符选择器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#通配符选择器&#34;&gt;#&lt;/a&gt; 通配符选择器&lt;/h6&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;* { }
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;通配符 简而言之就是对所有元素和类都有作用，后期主要用来先去除掉浏览器自身所带的一些 css 属性方便我们后续进行 css 操作&lt;/p&gt;
&lt;h4 id=&#34;3css字体属性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3css字体属性&#34;&gt;#&lt;/a&gt; 3.CSS 字体属性&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IQmjzQ&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQmjzQ.png&#34; alt=&#34;IQmjzQ.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;字体系列&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字体系列&#34;&gt;#&lt;/a&gt; 字体系列&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;font-family:’   &#39;;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通常会根据团队的要求来确定书写的字体 一般来说是微软雅黑也就是 microsoft YaHei 当然也可以有其他的一系列字体&lt;br&gt;
比如在后期的&lt;strong&gt;字体图标&lt;/strong&gt;中就需要修改 font-family&lt;/p&gt;
&lt;h6 id=&#34;字体大小&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字体大小&#34;&gt;#&lt;/a&gt; 字体大小&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;font-size:;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;顾名思义，是修改字体的大小，不过需要注意的是这后面不能跟单独的数字 这样是没有效果的 需要跟单位 px&lt;/p&gt;
&lt;h6 id=&#34;字体粗细&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字体粗细&#34;&gt;#&lt;/a&gt; 字体粗细&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;font-weight:  ;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里需要谨记 2 个数字&lt;br&gt;
 700: 加粗&lt;br&gt;
 400: 正常大小&lt;br&gt;
 font-weight 后面跟数字，可以根据需要来进行调整 不过一般都是 700 和 400 之间切换&lt;/p&gt;
&lt;h6 id=&#34;文字样式风格&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文字样式风格&#34;&gt;#&lt;/a&gt; 文字样式风格&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;font-style: ;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一般运用的都 italic (倾斜) 和 normal (正常) 两种&lt;br&gt;
实际运用场景：&lt;br&gt;
1. 用来修改需要倾斜的汉字&lt;br&gt;
 2. 当没有标签可用时，可以用 em 倾斜标签先将汉字包括，在通过 font-style:normal；将倾斜属性去掉&lt;/p&gt;
&lt;h6 id=&#34;字体复合属性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字体复合属性&#34;&gt;#&lt;/a&gt; 字体复合属性&lt;/h6&gt;
&lt;p&gt;通过简写的方式来节约代码 (不过有顺序要求)&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;font: font-style  font-weight  font-size/line-height  font-family;
eg:font: italic 700 16px &#39;Microsoft yahei&#39;;
 前面两个可以省略，但是后面连个一定要写
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;4文本外观属性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4文本外观属性&#34;&gt;#&lt;/a&gt; 4. 文本外观属性&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IQn9Zq&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQn9Zq.png&#34; alt=&#34;IQn9Zq.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;颜色&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#颜色&#34;&gt;#&lt;/a&gt; 颜色&lt;/h6&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;color: &#34;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里 color 后面所带有 4 种写法&lt;br&gt;
 1. 直接加颜色例如 red,blue&lt;br&gt;
2. 加颜色编号，主要这里 #必须加例如 #123456 (常用) 后期通常会用吸色笔 然后负值颜色编号&lt;br&gt;
 3.rgb (X,X,X) 三色的搭配&lt;br&gt;
 4.rgba (X,X,X,G) 这个主要是用来设置颜色的透明度 G 取值从 0~1&lt;br&gt;
 用来设置颜色的透明度&lt;/p&gt;
&lt;h6 id=&#34;文字对齐&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文字对齐&#34;&gt;#&lt;/a&gt; 文字对齐&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;text-align: ;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;设置文字的对齐方式，&lt;br&gt;
left,center,right&lt;/p&gt;
&lt;h6 id=&#34;装饰文本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#装饰文本&#34;&gt;#&lt;/a&gt; 装饰文本&lt;/h6&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;text-deroration: ;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;可加元素:&lt;br&gt;
line-through 删除线&lt;br&gt;
 overline 上划线&lt;br&gt;
&lt;strong&gt; none&lt;/strong&gt; (常用) 通常用来配合通配符选择器来取消 a 的下划线&lt;/p&gt;
&lt;h6 id=&#34;文本缩进&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文本缩进&#34;&gt;#&lt;/a&gt; 文本缩进&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;text-indent: ;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;后面添加数据时需要注意单位 用像素 (px) 或者 em (一个汉字所占的大小)&lt;/p&gt;
&lt;h6 id=&#34;行间距&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#行间距&#34;&gt;#&lt;/a&gt; 行间距&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;line-height: ;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也需要加 px&lt;br&gt;
 后期通常使 line-height 和 height 相等，来使文字垂直对齐&lt;/p&gt;
&lt;h4 id=&#34;5style样式表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5style样式表&#34;&gt;#&lt;/a&gt; 5.style 样式表&lt;/h4&gt;
&lt;h6 id=&#34;内部样式表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内部样式表&#34;&gt;#&lt;/a&gt; 内部样式表&lt;/h6&gt;
&lt;p&gt;也就是我们最开始介绍，直到现在一直在使用的加到 style 里面的 css 属性&lt;/p&gt;
&lt;h6 id=&#34;行内样式表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#行内样式表&#34;&gt;#&lt;/a&gt; 行内样式表&lt;/h6&gt;
&lt;p&gt;直接加在 html 标签中的样式表&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt; 例如: &amp;lt;div style=&#34;&#34;;&amp;gt; &amp;lt;/div&amp;gt;
 不常使用，会使html标签显得臃肿
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;h6 id=&#34;外部样式表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#外部样式表&#34;&gt;#&lt;/a&gt; 外部样式表&lt;/h6&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&#34;&#34;; href=&#34;文件地址&#34;;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;另建一个.css 文件，在另外一个文件中书写 css 属性&lt;br&gt;
再通过在 style 中书写 link 将其引入&lt;/p&gt;
&lt;h4 id=&#34;6vscode中使用emmet语法快速书写代码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6vscode中使用emmet语法快速书写代码&#34;&gt;#&lt;/a&gt; 6.vscode 中使用 emmet 语法快速书写代码&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IQnSLn&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQnSLn.png&#34; alt=&#34;IQnSLn.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;7选择器拓展&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#7选择器拓展&#34;&gt;#&lt;/a&gt; 7. 选择器拓展&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IQnZQJ&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQnZQJ.png&#34; alt=&#34;IQnZQJ.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;后代选择器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#后代选择器&#34;&gt;#&lt;/a&gt; 后代选择器&lt;/h6&gt;
&lt;p&gt;顾名思义就是将大元素中包括的小元素提取出来，这里通过列子来展示&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/IQnCd0&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQnCd0.png&#34; alt=&#34;IQnCd0.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;子元素选择器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#子元素选择器&#34;&gt;#&lt;/a&gt; 子元素选择器&lt;/h6&gt;
&lt;p&gt;例如上面的 ol li 变成 ol&amp;gt;li 就只对 ol 中的下一级 li 有用也就是他的儿子，而他的下下级，也就是孙子则不起作用&lt;/p&gt;
&lt;h6 id=&#34;并集选择器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#并集选择器&#34;&gt;#&lt;/a&gt; 并集选择器&lt;/h6&gt;
&lt;p&gt;在标签和标签中间用逗号连接，这样就可以达到同时对两个盒子都起作用的效果&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例如 div,p,li {}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;需要注意的是最后一个选择器不需要加逗号&lt;/p&gt;
&lt;h6 id=&#34;链接伪类选择器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#链接伪类选择器&#34;&gt;#&lt;/a&gt; 链接伪类选择器&lt;/h6&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IJqEWt&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/09/IJqEWt.png&#34; alt=&#34;IJqEWt.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;X:GGGG {}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;X 可以是你的选择器中的任何&lt;br&gt;
：后面可以添加 4 中元素 (其中 hover 最经常使用)：&lt;br&gt;
link: 未访问链接：把没有点击过的链接选择出来&lt;br&gt;
 visited: 访问过的链接，把点击过的链接选择出来&lt;br&gt;
 hover: 当鼠标经过时&lt;br&gt;
 active: 鼠标点击但是还未弹起来时&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/IQmxMj&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQmxMj.png&#34; alt=&#34;IQmxMj.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;focus选择器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#focus选择器&#34;&gt;#&lt;/a&gt; focus 选择器&lt;/h6&gt;
&lt;p&gt;把获得光标的 input 选择显示出来&lt;br&gt;
下面是代码，可以通过自己运行来进行查看&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/IQnPoV&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQnPoV.png&#34; alt=&#34;IQnPoV.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;8元素显示模式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#8元素显示模式&#34;&gt;#&lt;/a&gt; 8. 元素显示模式&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IJqmy8&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/09/IJqmy8.png&#34; alt=&#34;IJqmy8.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;块级元素&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#块级元素&#34;&gt;#&lt;/a&gt; 块级元素&lt;/h6&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IQnkJU&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQnkJU.png&#34; alt=&#34;IQnkJU.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;行内元素&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#行内元素&#34;&gt;#&lt;/a&gt; 行内元素&lt;/h6&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IQnAWF&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQnAWF.png&#34; alt=&#34;IQnAWF.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;行内块元素&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#行内块元素&#34;&gt;#&lt;/a&gt; 行内块元素&lt;/h6&gt;
&lt;p&gt;特殊情况，同时具有块级元素和行内元素的特点，可以进行的大小设置，也可以书写汉字，但是大小会随着汉字的多少而改变&lt;/p&gt;
&lt;h6 id=&#34;元素显示模式转换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#元素显示模式转换&#34;&gt;#&lt;/a&gt; 元素显示模式转换&lt;/h6&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt; display:   ;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;inline: 行内元素&lt;br&gt;
 block: 块级元素&lt;br&gt;
 inline-block: 行内块元素&lt;br&gt;
&lt;strong&gt;学到这里去做一下小米侧边栏试试吧&lt;/strong&gt;&lt;/p&gt;
&lt;h6 id=&#34;单行文字垂直居中&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#单行文字垂直居中&#34;&gt;#&lt;/a&gt; 单行文字垂直居中&lt;/h6&gt;
&lt;p&gt;也就是上面和大家提及过的，这里让 height 和 line-height 相同即可&lt;/p&gt;
&lt;h4 id=&#34;9背景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#9背景&#34;&gt;#&lt;/a&gt; 9. 背景&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IQ6dHA&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQ6dHA.png&#34; alt=&#34;IQ6dHA.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;背景颜色&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#背景颜色&#34;&gt;#&lt;/a&gt; 背景颜色&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;background-color: ;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;后面的元素参照前面 color 属性&lt;/p&gt;
&lt;h6 id=&#34;背景图片&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#背景图片&#34;&gt;#&lt;/a&gt; 背景图片&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;background-image: url (链接 / 地址)；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h6 id=&#34;背景平铺&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#背景平铺&#34;&gt;#&lt;/a&gt; 背景平铺&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;background-repeat: ;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;no-repeat (常用): 不平铺&lt;br&gt;
 repeat (默认): 平铺&lt;br&gt;
 repeat-x: 沿着 X 轴平铺&lt;br&gt;
 repeat-y: 沿着 Y 轴平铺&lt;br&gt;
&lt;strong&gt;背景图片会压住背景颜色&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/IQnFiT&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQnFiT.png&#34; alt=&#34;IQnFiT.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;背景位置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#背景位置&#34;&gt;#&lt;/a&gt; 背景位置&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;background-position: ;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;left top center right bottom&lt;br&gt;
 也可以用 right center 等同时使用 但是有几点需要注意&lt;br&gt;
 1. 如果是方位名词  right center 和 center right 效果是等价的 跟顺序没有关系&lt;br&gt;
 2. 当有参数省略时，并且不全是方位名字时，例如 right top ,&lt;br&gt;
 省略 right，此时 top 会自动顶部对齐，而省略的会被判定为水平居中&lt;br&gt;
省略 top，则会被判定为垂直居中&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/IQnEz4&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQnEz4.png&#34; alt=&#34;IQnEz4.png&#34;&gt;&lt;/a&gt;&lt;br&gt;
 也可以用具体的数据来进行移动，主要用于精灵图&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/IQney9&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQney9.png&#34; alt=&#34;IQney9.png&#34;&gt;&lt;/a&gt;&lt;br&gt;
 需要注意的时，html 的 X 轴向右，而 y 轴是向下的，需要向反方向移动时可以添加负号&lt;/p&gt;
&lt;h6 id=&#34;背景固定&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#背景固定&#34;&gt;#&lt;/a&gt; 背景固定&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;backgrounf-attachment: fixed;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;将背景图片固定，这样滑动鼠标滚轮时，背景图片会一直存在于网页上，并不会滑走&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/IQnmLR&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQnmLR.png&#34; alt=&#34;IQnmLR.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;背景属性复合写法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#背景属性复合写法&#34;&gt;#&lt;/a&gt; 背景属性复合写法&lt;/h6&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IQ6tje&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQ6tje.png&#34; alt=&#34;IQ6tje.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;背景半透明&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#背景半透明&#34;&gt;#&lt;/a&gt; 背景半透明&lt;/h6&gt;
&lt;p&gt;主要这个不是放在 background-color 中&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;background: rgba(X,X,X,X);&lt;/p&gt;
&lt;/blockquote&gt;
</content>
        <category term="Css" />
        <updated>2021-11-05T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://github.com/YogMas/YogMas.github.io/2021/11/06/css2/</id>
        <title>Css-second</title>
        <link rel="alternate" href="https://github.com/YogMas/YogMas.github.io/2021/11/06/css2/"/>
        <content type="html">&lt;h1 id=&#34;css2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#css2&#34;&gt;#&lt;/a&gt; css2&lt;/h1&gt;
&lt;h3 id=&#34;the-article-from-yogmas-also-sam&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#the-article-from-yogmas-also-sam&#34;&gt;#&lt;/a&gt; the article from yogmas also sam&lt;/h3&gt;
&lt;h4 id=&#34;1css选择器的性质&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1css选择器的性质&#34;&gt;#&lt;/a&gt; 1.css 选择器的性质&lt;/h4&gt;
&lt;h6 id=&#34;css层叠性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#css层叠性&#34;&gt;#&lt;/a&gt; css 层叠性&lt;/h6&gt;
&lt;p&gt;长江后浪推前浪，前浪死在沙滩上&lt;br&gt;
当两个完全相同的选择器写在一起时，此时根据就近原则处理&lt;/p&gt;
&lt;h6 id=&#34;css继承性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#css继承性&#34;&gt;#&lt;/a&gt; css 继承性&lt;/h6&gt;
&lt;p&gt;大元素中的小元素会继承写在大元素中的属性&lt;/p&gt;
&lt;h6 id=&#34;行高的继承&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#行高的继承&#34;&gt;#&lt;/a&gt; 行高的继承&lt;/h6&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IQ6YcD&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQ6YcD.png&#34; alt=&#34;IQ6YcD.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;孩子拥有 font-size 元素会优先使用定义在自身的，而后面的倍数孩子自身没有就会继承父亲的倍数&lt;/p&gt;
&lt;h6 id=&#34;css优先级&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#css优先级&#34;&gt;#&lt;/a&gt; css 优先级&lt;/h6&gt;
&lt;p&gt;这个主要是根据后面的权重的大小而判定的，权重大的优先。&lt;/p&gt;
&lt;h6 id=&#34;css权重&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#css权重&#34;&gt;#&lt;/a&gt; css 权重&lt;/h6&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IQ6UnH&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQ6UnH.png&#34; alt=&#34;IQ6UnH.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;权重的叠加&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#权重的叠加&#34;&gt;#&lt;/a&gt; 权重的叠加&lt;/h6&gt;
&lt;p&gt;权重的叠加可以用加减法来计算&lt;br&gt;
例如 0,1,0,0 相当于 100&lt;/p&gt;
&lt;h4 id=&#34;2盒子模型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2盒子模型&#34;&gt;#&lt;/a&gt; 2. 盒子模型&lt;/h4&gt;
&lt;p&gt;盒子通常是块级元素&lt;br&gt;
也可以通过 display 将其变成块级元素 a 元素通常使用这种方法&lt;/p&gt;
&lt;h6 id=&#34;盒子边框&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#盒子边框&#34;&gt;#&lt;/a&gt; 盒子边框&lt;/h6&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IQ6aBd&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQ6aBd.png&#34; alt=&#34;IQ6aBd.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;border-width: ;&lt;br&gt;
border-style: ;&lt;br&gt;
border-color: ;&lt;br&gt;
border:width style color ; 复合写法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这边建议大家使用复合写法&lt;br&gt;
 style:solid 实线 dotted 虚线 dashed 更大点的虚线&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;边框会影响盒子的实际大小&lt;/strong&gt;&lt;/p&gt;
&lt;h6 id=&#34;盒子内边框&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#盒子内边框&#34;&gt;#&lt;/a&gt; 盒子内边框&lt;/h6&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IQ66gS&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQ66gS.png&#34; alt=&#34;IQ66gS.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;padding: ;&lt;br&gt;
padding-left: ;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;同理 left 可以换成其他的方位&lt;/p&gt;
&lt;p&gt;内边距复合写法：从顶部顺时针数&lt;br&gt;
&lt;strong&gt;内边距会影响盒子的大小&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;内边距不会影响盒子大小的情况:&lt;br&gt;
 当盒子内没有给宽时，padding-left/right 不会影响&lt;br&gt;
没有给高时 padding-top/bottom 不会影响&lt;/p&gt;
&lt;h6 id=&#34;盒子外边距&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#盒子外边距&#34;&gt;#&lt;/a&gt; 盒子外边距&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;margin:  ;&lt;br&gt;
margin-top/XXX: ;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;复合写法和内边距同理&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;外边距典型应用&lt;/strong&gt;:&lt;br&gt;
margin: XXXpx auto;&lt;br&gt;
 此时 auto 代表左右两边自动设置可以让盒子水平对齐&lt;/p&gt;
&lt;h6 id=&#34;行内元素或行内块元素水平居中对齐&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#行内元素或行内块元素水平居中对齐&#34;&gt;#&lt;/a&gt; 行内元素或行内块元素水平居中对齐&lt;/h6&gt;
&lt;p&gt;margin 对行内元素没有作用，但是可以给这两种元素的父盒子添加 text-align:center;&lt;/p&gt;
&lt;h6 id=&#34;外边距合并&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#外边距合并&#34;&gt;#&lt;/a&gt; 外边距合并&lt;/h6&gt;
&lt;p&gt;当子盒子给 margin 时，父盒子和子盒子会塌陷，两个盒子会边框重合&lt;/p&gt;
&lt;h6 id=&#34;清除内外边距&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#清除内外边距&#34;&gt;#&lt;/a&gt; 清除内外边距&lt;/h6&gt;
&lt;p&gt;通常浏览器会自带内外边距这时就需要使用通用符选择器将浏览器自带的边距出去&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;* {padding:0 ;
   margin:0;}
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;h6 id=&#34;圆角边框&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#圆角边框&#34;&gt;#&lt;/a&gt; 圆角边框&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;border-radius: Xpx ;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原理：利用一个半径为 Xpx 的圆，与边角重叠，然后切去没有重叠的边角；&lt;/p&gt;
&lt;h6 id=&#34;盒子阴影&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#盒子阴影&#34;&gt;#&lt;/a&gt; 盒子阴影&lt;/h6&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IQCJfI&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQCJfI.png&#34; alt=&#34;IQCJfI.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;box-shadow: X X X X X;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由左到右依次为 往右边移动的距离 往下面移动的距离 阴影发散度 (往四面八方发散)  往四面八方扩散的距离 颜色 (通常是 rgba 控制)&lt;/p&gt;
&lt;h6 id=&#34;文字阴影&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文字阴影&#34;&gt;#&lt;/a&gt; 文字阴影&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;text-shadow:X X X rgba;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;分别是 往右边移动的距离 往下面移动的距离 虚实度 (越大越虚)&lt;/p&gt;
&lt;h6 id=&#34;行内块元素中间有缝隙&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#行内块元素中间有缝隙&#34;&gt;#&lt;/a&gt; 行内块元素中间有缝隙&lt;/h6&gt;
&lt;h4 id=&#34;3浮动&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3浮动&#34;&gt;#&lt;/a&gt; 3. 浮动&lt;/h4&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;  float: left/right;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;h6 id=&#34;浮动特性-脱标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#浮动特性-脱标&#34;&gt;#&lt;/a&gt; 浮动特性 - 脱标&lt;/h6&gt;
&lt;p&gt;1. 脱离标准普通流的控制（浮）移动到指定位置（动）。&lt;br&gt;
2. 浮动的盒子不在保留原先的位置&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;浮动元素具有行内块元素的特点&lt;/strong&gt;&lt;br&gt;
浮动盒子通常搭配标准流父盒子&lt;/p&gt;
&lt;h6 id=&#34;浮动的注意点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#浮动的注意点&#34;&gt;#&lt;/a&gt; 浮动的注意点&lt;/h6&gt;
&lt;p&gt;1. 如果一个子元素浮动了，尽量其他盒子也浮动，这样保证这些子元素一行显示&lt;/p&gt;
&lt;h6 id=&#34;清除浮动的方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#清除浮动的方法&#34;&gt;#&lt;/a&gt; 清除浮动的方法&lt;/h6&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IQCN1P&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQCN1P.png&#34; alt=&#34;IQCN1P.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IJqJS0&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/09/IJqJS0.png&#34; alt=&#34;IJqJS0.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;额外标签法：在子盒子的最后新增一个块级盒子 并且用 css 给快捷盒子加上 clear:both; 属性&lt;/p&gt;
&lt;p&gt;父元素 overflow: 给父元素加上一个 overflow: hidden; 的 css 属性&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/IJqtyT&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/09/IJqtyT.png&#34; alt=&#34;IJqtyT.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;伪元素清除:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;.clearfix:after {&lt;br&gt;
content: “”;&lt;br&gt;
display: block;&lt;br&gt;
height: 0;&lt;br&gt;
clear: both;&lt;br&gt;
visibility: hidden;&lt;br&gt;
}&lt;br&gt;
.clearfix {&lt;br&gt;
IE6、7 专有&lt;br&gt;
 zoom: 1;&lt;br&gt;
}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IQ60AI&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQ60AI.png&#34; alt=&#34;IQ60AI.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给父盒子一个 class 为 clearfix 然后将这串代码心如 css 中&lt;/p&gt;
&lt;p&gt;双伪元素清除:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;.clearfix:before,&lt;br&gt;
.clearfix:after {&lt;br&gt;
content: “”;&lt;br&gt;
display: table;&lt;br&gt;
}&lt;br&gt;
.clearfix:after {&lt;br&gt;
clear: both;&lt;br&gt;
}&lt;br&gt;
.clearfix {&lt;br&gt;
*zoom: 1;&lt;br&gt;
}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;同理给一个 clearfix 标签，然后将这串代码写入 css 中&lt;/p&gt;
&lt;h4 id=&#34;4定位&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4定位&#34;&gt;#&lt;/a&gt; 4. 定位&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IQCGtA&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQCGtA.png&#34; alt=&#34;IQCGtA.png&#34;&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/IJqwTJ&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/09/IJqwTJ.png&#34; alt=&#34;IJqwTJ.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;position: ;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;static: 默认静态定位&lt;br&gt;
 absolute: 绝对定位&lt;br&gt;
 relative: 相对定位&lt;br&gt;
 fixed: 固定定位&lt;br&gt;
 sticky: 粘性定位&lt;/p&gt;
&lt;p&gt;相对定位：可以进行定位，但依旧会占用空间&lt;br&gt;
绝对定位&lt;br&gt;
如果没施加绝对定位的盒子没有父盒子，那么绝对定位就是在浏览器的基础上的&lt;br&gt;
如果绝对定位的盒子有父盒子，那么绝对定位就是在父盒子的基础上，并且&lt;strong&gt;父盒子一定要有定位，否则绝对定位就会失效&lt;/strong&gt;所以通常说相对定位就是给绝对定位当爹的&lt;/p&gt;
&lt;p&gt;固定定位：会固定在屏幕上，无视浏览器的滑块移动&lt;/p&gt;
&lt;p&gt;粘性定位：会先随着浏览器滑块的滑动而滑动，但是后来会静止，并且无法滑出浏览器屏幕&lt;/p&gt;
&lt;h6 id=&#34;定位的堆叠顺序&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定位的堆叠顺序&#34;&gt;#&lt;/a&gt; 定位的堆叠顺序&lt;/h6&gt;
&lt;p&gt;如果有很多个绝对定位，可能会放在同一个位置，这时候需要确定谁放置在最上面&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;z-index: ;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;默认为 0，数值越大显示等级越高&lt;/p&gt;
&lt;h6 id=&#34;小技巧-绝对定位的水平垂直居中&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#小技巧-绝对定位的水平垂直居中&#34;&gt;#&lt;/a&gt; 小技巧 - 绝对定位的水平垂直居中&lt;/h6&gt;
&lt;p&gt;1.left 走 50%  父容器宽度的一半&lt;br&gt;
 2.margin 负值 往左边走 自己盒子宽度的一半&lt;/p&gt;
&lt;h6 id=&#34;定位的特殊特性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定位的特殊特性&#34;&gt;#&lt;/a&gt; 定位的特殊特性&lt;/h6&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IQC1TH&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQC1TH.png&#34; alt=&#34;IQC1TH.png&#34;&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/IQCtpt&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQCtpt.png&#34; alt=&#34;IQCtpt.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;定位和浮动的差异&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定位和浮动的差异&#34;&gt;#&lt;/a&gt; 定位和浮动的差异&lt;/h6&gt;
&lt;p&gt;定位和浮动有相似部分，类如都会转化为行内块元素，都会压住盒子，但是浮动不会压住文字，定位会将所有东西压住&lt;/p&gt;
&lt;h4 id=&#34;5显示隐藏&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5显示隐藏&#34;&gt;#&lt;/a&gt; 5. 显示隐藏&lt;/h4&gt;
&lt;h6 id=&#34;display&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#display&#34;&gt;#&lt;/a&gt; display&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;display: ;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IQCaX8&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQCaX8.png&#34; alt=&#34;IQCaX8.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;visibility&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#visibility&#34;&gt;#&lt;/a&gt; visibility&lt;/h6&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IQCwnS&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQCwnS.png&#34; alt=&#34;IQCwnS.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;overflow&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#overflow&#34;&gt;#&lt;/a&gt; overflow&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;overflow: ;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IQC00g&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQC00g.png&#34; alt=&#34;IQC00g.png&#34;&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/IQCB7Q&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQCB7Q.png&#34; alt=&#34;IQCB7Q.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;6精灵图&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6精灵图&#34;&gt;#&lt;/a&gt; 6. 精灵图&lt;/h4&gt;
&lt;p&gt;这里不好介绍怎样操作只能简单而言&lt;br&gt;
一张包含各种小图片的大图片&lt;br&gt;
利用前面所讲的背景图片位置的移动使其只能显示出一张小图片来&lt;br&gt;
问：为什么需要精灵图&lt;br&gt;
利用精灵图可以将多张图片整合在一起，从而可以减少信息的发送和接受量，减少服务器的负担&lt;/p&gt;
&lt;h4 id=&#34;7字体图标的使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#7字体图标的使用&#34;&gt;#&lt;/a&gt; 7. 字体图标的使用&lt;/h4&gt;
&lt;p&gt;通过在网站上寻找字体图标，下载&lt;/p&gt;
&lt;p&gt;然后将代码写入 css 中&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;@font-face {&lt;br&gt;
font-family: ‘icomoon’;&lt;br&gt;
src:  url(‘fonts/icomoon.eot?p4ssmb’);&lt;br&gt;
src:  url(‘fonts/icomoon.eot?p4ssmb#iefix’) format(‘embedded-opentype’),&lt;br&gt;
url(‘fonts/icomoon.ttf?p4ssmb’) format(‘truetype’),&lt;br&gt;
url(‘fonts/icomoon.woff?p4ssmb’) format(‘woff’),&lt;br&gt;
url(‘fonts/icomoon.svg?p4ssmb#icomoon’) format(‘svg’);&lt;br&gt;
font-weight: normal;&lt;br&gt;
font-style: normal;&lt;br&gt;
font-display: block;&lt;br&gt;
}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;font 文件夹移动到主文件夹中&lt;/p&gt;
&lt;p&gt;此时就可以用字体图标代码来进行表示字体图标&lt;/p&gt;
&lt;p&gt;好处：可以对图标进行改变颜色大小等等的改变字体时用到的属性&lt;/p&gt;
&lt;h4 id=&#34;8css三角的制作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#8css三角的制作&#34;&gt;#&lt;/a&gt; 8.css 三角的制作&lt;/h4&gt;
&lt;p&gt;利用 cssborder 属性来进行三角的制作&lt;br&gt;
由于不好叙述，自己输入，理解并体验这几组代码，应该就能理解 css 三角的制作&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/IQCsts&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQCsts.png&#34; alt=&#34;IQCsts.png&#34;&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/IQCrkj&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQCrkj.png&#34; alt=&#34;IQCrkj.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;9用户界面样式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#9用户界面样式&#34;&gt;#&lt;/a&gt; 9. 用户界面样式&lt;/h4&gt;
&lt;h6 id=&#34;表单轮廓&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#表单轮廓&#34;&gt;#&lt;/a&gt; 表单轮廓&lt;/h6&gt;
&lt;p&gt;由于点击表单或者 text 文本框时边框上会出现颜色变化边框变大拖拽文本域等一系列的反应，从而利用 css 取消边框的轮廓&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;outline: none;  (input,textarea)
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;resize:none; (textarea)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;用来防止拖拽文本域的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h6 id=&#34;鼠标样式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#鼠标样式&#34;&gt;#&lt;/a&gt; 鼠标样式&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;cursor: ;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;default: 小白鼠标样式&lt;br&gt;
 pointer: 鼠标小手样式&lt;br&gt;
 move: 鼠标移动样式&lt;br&gt;
 text: 鼠标文本样式&lt;br&gt;
 not-allowed: 鼠标禁止样式&lt;/p&gt;
&lt;h6 id=&#34;图片文字垂直居中&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#图片文字垂直居中&#34;&gt;#&lt;/a&gt; 图片文字垂直居中&lt;/h6&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IJqrf1&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/09/IJqrf1.png&#34; alt=&#34;IJqrf1.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;图片底侧有空白缝隙的解决方案&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#图片底侧有空白缝隙的解决方案&#34;&gt;#&lt;/a&gt; 图片底侧有空白缝隙的解决方案&lt;/h6&gt;
&lt;p&gt;先将图片变为块级元素，然后再给块级元素设置边框就可以解决&lt;/p&gt;
&lt;h4 id=&#34;10文字溢出显示&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#10文字溢出显示&#34;&gt;#&lt;/a&gt; 10. 文字溢出显示&lt;/h4&gt;
&lt;h6 id=&#34;单行文字溢出显示&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#单行文字溢出显示&#34;&gt;#&lt;/a&gt; 单行文字溢出显示&lt;/h6&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IQCyhn&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/06/IQCyhn.png&#34; alt=&#34;IQCyhn.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;多行文字溢出显示&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#多行文字溢出显示&#34;&gt;#&lt;/a&gt; 多行文字溢出显示&lt;/h6&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IJqc6K&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/09/IJqc6K.png&#34; alt=&#34;IJqc6K.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;11margin负值的巧妙运动&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#11margin负值的巧妙运动&#34;&gt;#&lt;/a&gt; 11.margin 负值的巧妙运动&lt;/h4&gt;
&lt;p&gt;如果多个盒子都有边框，此时相交部分边框会重合在一起，从而增加边框的大小，此时只需要写入 margin-left: -1px; 就可以得到解决&lt;/p&gt;
&lt;h4 id=&#34;12文字围绕浮动元素&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#12文字围绕浮动元素&#34;&gt;#&lt;/a&gt; 12. 文字围绕浮动元素&lt;/h4&gt;
&lt;p&gt;众所周知浮动元素是不占用空间的，此时如果将一个照片浮动，而需要在照片旁边写入汉字的话，汉字是否会出现在图片的下方呢，答案是不会，因为汉字会围绕浮动元素&lt;/p&gt;
&lt;h4 id=&#34;13css初始化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#13css初始化&#34;&gt;#&lt;/a&gt; 13.css 初始化&lt;/h4&gt;
&lt;p&gt;这里给出一串代码，初始化网页，将网页元素自带的一些 css 属性给去掉&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/* 把我们所有标签的内外边距清零 &lt;em&gt;/&lt;br&gt;
* {&lt;br&gt;
margin: 0;&lt;br&gt;
padding: 0&lt;br&gt;
}&lt;br&gt;
/&lt;/em&gt;em 和 i 斜体的文字不倾斜 &lt;em&gt;/&lt;br&gt;
em,&lt;br&gt;
i {&lt;br&gt;
font-style: normal&lt;br&gt;
}&lt;br&gt;
/&lt;/em&gt; 去掉 li 的小圆点 &lt;em&gt;/&lt;br&gt;
li {&lt;br&gt;
list-style: none&lt;br&gt;
}&lt;br&gt;
img {&lt;br&gt;
/&lt;/em&gt;border 0 照顾低版本浏览器 如果 图片外面包含了链接会有边框的问题 &lt;em&gt;/&lt;br&gt;
border: 0;&lt;br&gt;
/&lt;/em&gt; 取消图片底侧有空白缝隙的问题 &lt;em&gt;/&lt;br&gt;
vertical-align: middle&lt;br&gt;
}&lt;br&gt;
button {&lt;br&gt;
/&lt;/em&gt; 当我们鼠标经过 button 按钮的时候，鼠标变成小手 &lt;em&gt;/&lt;br&gt;
cursor: pointer&lt;br&gt;
}&lt;br&gt;
a {&lt;br&gt;
color: #666;&lt;br&gt;
text-decoration: none&lt;br&gt;
}&lt;br&gt;
a:hover {&lt;br&gt;
color: #c81623&lt;br&gt;
}&lt;br&gt;
button,&lt;br&gt;
input {&lt;br&gt;
/&lt;/em&gt; “\5B8B\4F53” 就是宋体的意思 这样浏览器兼容性比较好 &lt;em&gt;/&lt;br&gt;
font-family: Microsoft YaHei, Heiti SC, tahoma, arial, Hiragino Sans GB, “\5B8B\4F53”, sans-serif&lt;br&gt;
}&lt;br&gt;
body {&lt;br&gt;
/&lt;/em&gt; CSS3 抗锯齿形 让文字显示的更加清晰 &lt;em&gt;/&lt;br&gt;
-webkit-font-smoothing: antialiased;&lt;br&gt;
background-color: #fff;&lt;br&gt;
font: 12px/1.5 Microsoft YaHei, Heiti SC, tahoma, arial, Hiragino Sans GB, “\5B8B\4F53”, sans-serif;&lt;br&gt;
color: #666&lt;br&gt;
}&lt;br&gt;
.hide,&lt;br&gt;
.none {&lt;br&gt;
display: none&lt;br&gt;
}&lt;br&gt;
/&lt;/em&gt; 清除浮动 */&lt;br&gt;
.clearfix:after {&lt;br&gt;
visibility: hidden;&lt;br&gt;
clear: both;&lt;br&gt;
display: block;&lt;br&gt;
content: “.”;&lt;br&gt;
height: 0&lt;br&gt;
}&lt;br&gt;
.clearfix {&lt;br&gt;
*zoom: 1&lt;br&gt;
}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;14css新增属性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#14css新增属性&#34;&gt;#&lt;/a&gt; 14.css 新增属性&lt;/h4&gt;
&lt;h6 id=&#34;新增属性选择器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#新增属性选择器&#34;&gt;#&lt;/a&gt; 新增属性选择器&lt;/h6&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IJqRmD&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/09/IJqRmD.png&#34; alt=&#34;IJqRmD.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;通过举例进行说明&lt;br&gt;
 input [type=text] {}&lt;br&gt;
 这个表示选出 input 中 type=text 的元素&lt;/p&gt;
&lt;p&gt;div [class^=XXX]: 选出以 XXX 开头的元素&lt;/p&gt;
&lt;p&gt;div [class$=XXX]: 选出以 XXX 结尾的元素&lt;/p&gt;
&lt;h6 id=&#34;结构伪类选择器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#结构伪类选择器&#34;&gt;#&lt;/a&gt; 结构伪类选择器&lt;/h6&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IJqgOO&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/09/IJqgOO.png&#34; alt=&#34;IJqgOO.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;xxx:firstchild
xxx:secondchild
xxx:nth-child(number)
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;都是选出第几个子元素的意思&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/IJq4kd&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/09/IJq4kd.png&#34; alt=&#34;IJq4kd.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;括号里面不仅仅可以跟数字，也可以很有特殊意义的单词，甚至可以跟公式 n 将取自然数&lt;/p&gt;
&lt;p&gt;nth-of-type 选择器&lt;/p&gt;
&lt;p&gt;两个选择器的区别如下&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/IJqfTH&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/09/IJqfTH.png&#34; alt=&#34;IJqfTH.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;举例子来说明:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;光头强&amp;lt;/p&amp;gt;
&amp;lt;div&amp;gt;熊大&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;熊二&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;此时如果给一个 section div:nth-child (1) { background-color: red; } 指令，你觉得谁会被加上红色呢&lt;br&gt;
答案是都不会&lt;br&gt;
 child 先看后面的数字 1   ，此时第一个孩子是 p，然后再来看前面的 div，发现 div 不是 P，所以不成立 谁都不给&lt;/p&gt;
&lt;p&gt;但如果给一个 section div:nth-of-type (1) {&lt;br&gt;
background-color: blue;} 指令呢&lt;br&gt;
答案是会给熊大，type 先看前面的 div，找出 div，再发现后面的 1，所以会给 div 中的第一个孩子&lt;/p&gt;
&lt;h6 id=&#34;伪元素选择器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#伪元素选择器&#34;&gt;#&lt;/a&gt; 伪元素选择器&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;XXX::before/after {&lt;br&gt;
content:’’;&lt;br&gt;
}&lt;br&gt;
 这里面的 content 是必须加的，表示里面的内容，即使你没有内容要写，也需要写出 content 否则无效，注意是单引号&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;用处：可以里面 css 来个父元素添加盒子 词的的 before 表示出现在父元素的左边 after 表示出现在父元素的右边&lt;/p&gt;
&lt;h6 id=&#34;css3盒子模型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#css3盒子模型&#34;&gt;#&lt;/a&gt; css3 盒子模型&lt;/h6&gt;
&lt;p&gt;前面我们说了 padding 和边框都会撑大盒子，所以说我们使用 border 和 padding 还需要减去其尺寸，现在我们提供了修复的方法&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;box-sizing:  ;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;content-box: 按照原来会撑大盒子的方式&lt;br&gt;
 border-box: 会自动减去撑大的尺寸，保证盒子的尺寸不变&lt;/p&gt;
&lt;h6 id=&#34;图片模糊处理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#图片模糊处理&#34;&gt;#&lt;/a&gt; 图片模糊处理&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;filter:blur()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;blur 是一个函数 小括号里面数值越大，图片越模糊 注意数值要加 px 单位&lt;/p&gt;
&lt;h6 id=&#34;css3宽度calc函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#css3宽度calc函数&#34;&gt;#&lt;/a&gt; css3 宽度 calc 函数&lt;/h6&gt;
&lt;p&gt;calc 函数主要提供了一个计算的方法&lt;br&gt;
例如在有一个父盒子的前提下，子盒子写出这样一个函数 width: calc (100% - 30px); 表示在父亲 100% 尺寸的前提下始终减去 30px 的宽度&lt;/p&gt;
&lt;h6 id=&#34;过渡效果&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过渡效果&#34;&gt;#&lt;/a&gt; 过渡效果&lt;/h6&gt;
&lt;p&gt;大概来说就是将一个瞬间变化的过程转化成阶段性有时间长短的变化&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/IJqTpt&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/09/IJqTpt.png&#34; alt=&#34;IJqTpt.png&#34;&gt;&lt;/a&gt;&lt;br&gt;
 在这里 0s 开始一般可以不写而省略，变化曲线也一遍使用 ease 这是最常用的变化曲线&lt;/p&gt;
</content>
        <category term="Css" />
        <updated>2021-11-05T16:00:00.000Z</updated>
    </entry>
</feed>
