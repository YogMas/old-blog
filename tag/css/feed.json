{
    "version": "https://jsonfeed.org/version/1",
    "title": "S1m • All posts by \"css\" tag",
    "description": "博客记录个人学习笔记,处于不断完善中",
    "home_page_url": "https://github.com/YogMas/YogMas.github.io",
    "items": [
        {
            "id": "https://github.com/YogMas/YogMas.github.io/2021/11/06/css-xin/",
            "url": "https://github.com/YogMas/YogMas.github.io/2021/11/06/css-xin/",
            "title": "Css新",
            "date_published": "2021-11-05T16:00:00.000Z",
            "content_html": "<h1 id=\"css新\"><a class=\"markdownIt-Anchor\" href=\"#css新\">#</a> CSS (新)</h1>\n<p>复习 (好吧 太久没用忘了 其实是重新学习过程) CSS 时记忆的笔记</p>\n<h2 id=\"定位position\"><a class=\"markdownIt-Anchor\" href=\"#定位position\">#</a> 定位 (position)</h2>\n<ul>\n<li>static: 正常流定位</li>\n<li>relative: 相对定位</li>\n<li>absolute,fixed: 绝对定位</li>\n<li>sticky: 粘性定位</li>\n</ul>\n<h3 id=\"static正常流定位\"><a class=\"markdownIt-Anchor\" href=\"#static正常流定位\">#</a> Static 正常流定位</h3>\n<p>按照从上到下文档刷新的方式，就是最默认的定位方式</p>\n<h3 id=\"relative相对定位\"><a class=\"markdownIt-Anchor\" href=\"#relative相对定位\">#</a> relative 相对定位</h3>\n<p>相对于原位置的定位，可以相对于原位置进行位置的移动</p>\n<p><strong>相对定位会保留原有的样式</strong>，意思就是说相对定位移动后，原来那个位置的样式，不会被覆盖，可以理解为被隐藏了但是还在</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token property\">position</span><span class=\"token punctuation\">:</span>relative<span class=\"token punctuation\">;</span>\n<span class=\"token property\">top</span><span class=\"token punctuation\">:</span>\n<span class=\"token property\">left</span><span class=\"token punctuation\">:</span>\n<span class=\"token property\">right</span><span class=\"token punctuation\">:</span>\n<span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"absolute绝对定位\"><a class=\"markdownIt-Anchor\" href=\"#absolute绝对定位\">#</a> absolute 绝对定位</h3>\n<p>absolute 是相对于上一个<strong>非 static 定位</strong>的祖宗节点的位置</p>\n<p>意思就是说 absolute 会向上找，找到一个不会 static 定位的祖宗节点 (最上面是<strong> body</strong>),top 相当于距离这个父节点顶部的距离，其他类似</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token property\">position</span><span class=\"token punctuation\">:</span>absolute<span class=\"token punctuation\">;</span>\n<span class=\"token property\">top</span><span class=\"token punctuation\">:</span>\n<span class=\"token property\">left</span><span class=\"token punctuation\">:</span>\n<span class=\"token property\">right</span><span class=\"token punctuation\">:</span>\n<span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"fixed固定定位\"><a class=\"markdownIt-Anchor\" href=\"#fixed固定定位\">#</a> fixed 固定定位</h3>\n<p>fixed 是相对于<strong>整个视窗</strong>的位移，也是固定不变的</p>\n<h3 id=\"static粘性定位\"><a class=\"markdownIt-Anchor\" href=\"#static粘性定位\">#</a> static 粘性定位</h3>\n<p>当粘性定位的盒子的<strong>真实位置</strong>在视窗内部的时候，他是正常显示的，但是当他要脱离视窗的时候，他会像固定定位一样，导致不脱离视窗</p>\n<h2 id=\"浮动\"><a class=\"markdownIt-Anchor\" href=\"#浮动\">#</a> 浮动</h2>\n<p>块是会自动换行的，加上 float 之后，可以放在一行的会放在一行，一行无法放下时再进行换行</p>\n<p>新的未浮动块会在浮动块的上方而不是排布在后方，要排布在后方可以清除浮动块的影响 使用 clear</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token property\">float</span><span class=\"token punctuation\">:</span>left\n<span class=\"token property\">clear</span><span class=\"token punctuation\">:</span>left/right/both<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"flex布局\"><a class=\"markdownIt-Anchor\" href=\"#flex布局\">#</a> flex 布局</h2>\n<p>弹性布局，也就是当拉伸视窗的时候，布局随着视窗的改变会自动变化</p>\n<p>定义在<strong>父节点盒子上</strong></p>\n<ol>\n<li><code>flex-direction</code> ： 属性指定了内部元素是如何在 flex 容器中<strong>布局</strong>的，<strong>定义了主轴的方向</strong> (正方向或反方向)。\n<ul>\n<li><code>row</code> :flex 容器的主轴被定义为与文本方向相同。 主轴起点和主轴终点与内容方向相同。</li>\n<li><code>row-reverse</code> : 表现和 row 相同，但是置换了主轴起点和主轴终点。</li>\n<li><code>column</code> :flex 容器的主轴和块轴相同。主轴起点与主轴终点和书写模式的前后点相同</li>\n<li><code>column-reverse</code> : 表现和 column 相同，但是置换了主轴起点和主轴终点</li>\n</ul>\n</li>\n<li><code>flex-wrap</code> : 指定 flex 元素<strong>单行显示还是多行显示</strong>。如果允许换行，这个属性允许你控制行的堆叠方向。\n<ul>\n<li><code>nowrap</code> : 默认值。不换行。</li>\n<li><code>wrap</code> : 换行，第一行在上方。</li>\n<li><code>wrap-reverse</code> : 换行，第一行在下方。</li>\n</ul>\n</li>\n<li><code>flex-flow</code> : <code>flex-direction</code>  和  <code>flex-wrap</code>  的简写。默认值为： <code>row nowrap</code></li>\n<li><code>justify-content</code> : 属性定义了浏览器之间，如何分配顺着弹性容器主轴 (或者网格行轴) 的元素之间及其周围的空间。也就是<strong>控制横向对齐方式</strong>\n<ul>\n<li><code>flex-start</code> ：默认值。左对齐。</li>\n<li><code>flex-end</code> ：右对齐。</li>\n<li><code>space-between</code> ：左右两段对齐。</li>\n<li><code>space-around</code> ：在每行上均匀分配弹性元素。相邻元素间距离相同。每行第一个元素到行首的距离和每行最后一个元素到行尾的距离将会是相邻元素之间距离的一半。</li>\n<li><code>space-evenly</code> ：flex 项都沿着主轴均匀分布在指定的对齐容器中。相邻 flex 项之间的间距，主轴起始位置到第一个 flex 项的间距，主轴结束位置到最后一个 flex 项的间距，都完全一样。</li>\n</ul>\n</li>\n<li><code>align-items</code> ：控制<strong>纵轴 (交叉轴</strong>对齐)\n<ul>\n<li><code>flex-start</code> ：元素向主轴起点对齐。</li>\n<li><code>flex-end</code> ：元素向主轴终点对齐。</li>\n<li><code>center</code> ：元素在侧轴居中。</li>\n<li><code>stretch</code> ：弹性元素被在侧轴方向被拉伸到与容器相同的高度或宽度。</li>\n</ul>\n</li>\n<li><code>align-content</code> : 与 <code>align-items</code>  类似但是有以下区别\n<ul>\n<li>前者会均匀分布，后者会使所有行紧贴在一起</li>\n<li>当只有一行的时候，前者仍然会居中，后者会失去居中</li>\n</ul>\n</li>\n</ol>\n<p>定义在<strong> flex 盒子内部元素中</strong></p>\n<ol>\n<li>\n<p><code>order</code> : 定义 <code>flex</code>  项目的顺序，值越小越靠前。</p>\n</li>\n<li>\n<p><code>flex-grow</code> :CSS 属性 flex-grow CSS 设置 flex 项主尺寸 的 flex 增长系数。<strong>负值无效，默认为 0。</strong> <strong>也就是当视窗变大的时候 块也等比例变大</strong></p>\n</li>\n<li>\n<p><code>flex-shrink</code> : 属性指定了 flex 元素的收缩规则。flex 元素仅在默认宽度之和大于容器的时候才会发生收缩，其收缩的大小是依据 flex-shrink 的值。<strong>负值无效，默认为 1。</strong></p>\n</li>\n<li>\n<p><code>flex-basis</code> : 设置默认宽度，<strong> 优先级大于默认 width</strong></p>\n</li>\n<li>\n<p><code>flex</code> : <code>flex-grow</code> 、 <code>flex-shrink</code> 、 <code>flex-basis</code>  的缩写。</p>\n<p>常用取值： <code>flex: 1 1 auto</code>        <code>flex: 0 0 auto</code></p>\n</li>\n</ol>\n",
            "tags": [
                "Css"
            ]
        },
        {
            "id": "https://github.com/YogMas/YogMas.github.io/2021/11/06/css1/",
            "url": "https://github.com/YogMas/YogMas.github.io/2021/11/06/css1/",
            "title": "Css-first",
            "date_published": "2021-11-05T16:00:00.000Z",
            "content_html": "<h1 id=\"css1\"><a class=\"markdownIt-Anchor\" href=\"#css1\">#</a> css1</h1>\n<h3 id=\"the-article-from-yogmas-also-sam\"><a class=\"markdownIt-Anchor\" href=\"#the-article-from-yogmas-also-sam\">#</a> the article from yogmas also sam</h3>\n<h4 id=\"1css基本架构\"><a class=\"markdownIt-Anchor\" href=\"#1css基本架构\">#</a> 1.css 基本架构</h4>\n<blockquote>\n<pre><code>&lt;html&gt; \n&lt;head&gt;\n&lt;style&gt;&lt;/style&gt;\n &lt;/head&gt;\n &lt;body&gt;&lt;/body&gt;\n &lt;/html&gt;\n style为css放置位置\n</code></pre>\n</blockquote>\n<p>前期学习先将 css 放置在 html 文件夹里面后期会单独利用 css 文件来写 css</p>\n<h4 id=\"2选择器\"><a class=\"markdownIt-Anchor\" href=\"#2选择器\">#</a> 2. 选择器</h4>\n<h6 id=\"标签选择器\"><a class=\"markdownIt-Anchor\" href=\"#标签选择器\">#</a> 标签选择器</h6>\n<blockquote>\n<p>选择器 {样式}<br>\n 给谁改样式 {改什么样式}<br>\neg.p { color: red;<br>\nfont-size: 12px; }</p>\n</blockquote>\n<p>标签选择器为大类选择，同一类标签全部都会被 css 修改</p>\n<h6 id=\"类选择器\"><a class=\"markdownIt-Anchor\" href=\"#类选择器\">#</a> 类选择器</h6>\n<blockquote>\n<pre><code>.id {} \neg .red {color:red;}\n&lt;# class=\"id\"&gt;  &lt;/#&gt;\n</code></pre>\n</blockquote>\n<p>这里的 ID 还需要与 html 中的 class 相互匹配 #可以替换成任何你想选择的类别 id 可以替换成任何你命名的字母或者单词<br>\n<strong>类选择器口诀：样式点定义  结构类 (class) 调用  一个或多个 开发最常用</strong><br>\n<a href=\"https://imgtu.com/i/IQmbIf\"><img src=\"https://z3.ax1x.com/2021/11/06/IQmbIf.png\" alt=\"IQmbIf.png\"></a><br>\n 同时类选择器可以有多个 ID 都会起作用 中间用空格隔开 例如<br>\n<a href=\"https://imgtu.com/i/IQmHdP\"><img src=\"https://z3.ax1x.com/2021/11/06/IQmHdP.png\" alt=\"IQmHdP.png\"></a></p>\n<h6 id=\"id选择器\"><a class=\"markdownIt-Anchor\" href=\"#id选择器\">#</a> id 选择器</h6>\n<p>id 选择器与类选择器相似，不过 ID 选择器只能使用一次 并且一个 ID 只能调用一次</p>\n<blockquote>\n<pre><code>#ID {}\n&lt;XX id=\"\"&gt;  &lt;/XX&gt;\n</code></pre>\n</blockquote>\n<h6 id=\"通配符选择器\"><a class=\"markdownIt-Anchor\" href=\"#通配符选择器\">#</a> 通配符选择器</h6>\n<blockquote>\n<pre><code>* { }\n</code></pre>\n</blockquote>\n<p>通配符 简而言之就是对所有元素和类都有作用，后期主要用来先去除掉浏览器自身所带的一些 css 属性方便我们后续进行 css 操作</p>\n<h4 id=\"3css字体属性\"><a class=\"markdownIt-Anchor\" href=\"#3css字体属性\">#</a> 3.CSS 字体属性</h4>\n<p><a href=\"https://imgtu.com/i/IQmjzQ\"><img src=\"https://z3.ax1x.com/2021/11/06/IQmjzQ.png\" alt=\"IQmjzQ.png\"></a></p>\n<h6 id=\"字体系列\"><a class=\"markdownIt-Anchor\" href=\"#字体系列\">#</a> 字体系列</h6>\n<blockquote>\n<p>font-family:’   ';</p>\n</blockquote>\n<p>通常会根据团队的要求来确定书写的字体 一般来说是微软雅黑也就是 microsoft YaHei 当然也可以有其他的一系列字体<br>\n比如在后期的<strong>字体图标</strong>中就需要修改 font-family</p>\n<h6 id=\"字体大小\"><a class=\"markdownIt-Anchor\" href=\"#字体大小\">#</a> 字体大小</h6>\n<blockquote>\n<p>font-size:;</p>\n</blockquote>\n<p>顾名思义，是修改字体的大小，不过需要注意的是这后面不能跟单独的数字 这样是没有效果的 需要跟单位 px</p>\n<h6 id=\"字体粗细\"><a class=\"markdownIt-Anchor\" href=\"#字体粗细\">#</a> 字体粗细</h6>\n<blockquote>\n<p>font-weight:  ;</p>\n</blockquote>\n<p>这里需要谨记 2 个数字<br>\n 700: 加粗<br>\n 400: 正常大小<br>\n font-weight 后面跟数字，可以根据需要来进行调整 不过一般都是 700 和 400 之间切换</p>\n<h6 id=\"文字样式风格\"><a class=\"markdownIt-Anchor\" href=\"#文字样式风格\">#</a> 文字样式风格</h6>\n<blockquote>\n<p>font-style: ;</p>\n</blockquote>\n<p>一般运用的都 italic (倾斜) 和 normal (正常) 两种<br>\n实际运用场景：<br>\n1. 用来修改需要倾斜的汉字<br>\n 2. 当没有标签可用时，可以用 em 倾斜标签先将汉字包括，在通过 font-style:normal；将倾斜属性去掉</p>\n<h6 id=\"字体复合属性\"><a class=\"markdownIt-Anchor\" href=\"#字体复合属性\">#</a> 字体复合属性</h6>\n<p>通过简写的方式来节约代码 (不过有顺序要求)</p>\n<blockquote>\n<pre><code>font: font-style  font-weight  font-size/line-height  font-family;\neg:font: italic 700 16px 'Microsoft yahei';\n 前面两个可以省略，但是后面连个一定要写\n</code></pre>\n</blockquote>\n<h4 id=\"4文本外观属性\"><a class=\"markdownIt-Anchor\" href=\"#4文本外观属性\">#</a> 4. 文本外观属性</h4>\n<p><a href=\"https://imgtu.com/i/IQn9Zq\"><img src=\"https://z3.ax1x.com/2021/11/06/IQn9Zq.png\" alt=\"IQn9Zq.png\"></a></p>\n<h6 id=\"颜色\"><a class=\"markdownIt-Anchor\" href=\"#颜色\">#</a> 颜色</h6>\n<blockquote>\n<pre><code>color: \"\n</code></pre>\n</blockquote>\n<p>这里 color 后面所带有 4 种写法<br>\n 1. 直接加颜色例如 red,blue<br>\n2. 加颜色编号，主要这里 #必须加例如 #123456 (常用) 后期通常会用吸色笔 然后负值颜色编号<br>\n 3.rgb (X,X,X) 三色的搭配<br>\n 4.rgba (X,X,X,G) 这个主要是用来设置颜色的透明度 G 取值从 0~1<br>\n 用来设置颜色的透明度</p>\n<h6 id=\"文字对齐\"><a class=\"markdownIt-Anchor\" href=\"#文字对齐\">#</a> 文字对齐</h6>\n<blockquote>\n<p>text-align: ;</p>\n</blockquote>\n<p>设置文字的对齐方式，<br>\nleft,center,right</p>\n<h6 id=\"装饰文本\"><a class=\"markdownIt-Anchor\" href=\"#装饰文本\">#</a> 装饰文本</h6>\n<blockquote>\n<pre><code>text-deroration: ;\n</code></pre>\n</blockquote>\n<p>可加元素:<br>\nline-through 删除线<br>\n overline 上划线<br>\n<strong> none</strong> (常用) 通常用来配合通配符选择器来取消 a 的下划线</p>\n<h6 id=\"文本缩进\"><a class=\"markdownIt-Anchor\" href=\"#文本缩进\">#</a> 文本缩进</h6>\n<blockquote>\n<p>text-indent: ;</p>\n</blockquote>\n<p>后面添加数据时需要注意单位 用像素 (px) 或者 em (一个汉字所占的大小)</p>\n<h6 id=\"行间距\"><a class=\"markdownIt-Anchor\" href=\"#行间距\">#</a> 行间距</h6>\n<blockquote>\n<p>line-height: ;</p>\n</blockquote>\n<p>也需要加 px<br>\n 后期通常使 line-height 和 height 相等，来使文字垂直对齐</p>\n<h4 id=\"5style样式表\"><a class=\"markdownIt-Anchor\" href=\"#5style样式表\">#</a> 5.style 样式表</h4>\n<h6 id=\"内部样式表\"><a class=\"markdownIt-Anchor\" href=\"#内部样式表\">#</a> 内部样式表</h6>\n<p>也就是我们最开始介绍，直到现在一直在使用的加到 style 里面的 css 属性</p>\n<h6 id=\"行内样式表\"><a class=\"markdownIt-Anchor\" href=\"#行内样式表\">#</a> 行内样式表</h6>\n<p>直接加在 html 标签中的样式表</p>\n<blockquote>\n<pre><code> 例如: &lt;div style=\"\";&gt; &lt;/div&gt;\n 不常使用，会使html标签显得臃肿\n</code></pre>\n</blockquote>\n<h6 id=\"外部样式表\"><a class=\"markdownIt-Anchor\" href=\"#外部样式表\">#</a> 外部样式表</h6>\n<blockquote>\n<pre><code>&lt;link rel=\"\"; href=\"文件地址\";&gt;\n</code></pre>\n</blockquote>\n<p>另建一个.css 文件，在另外一个文件中书写 css 属性<br>\n再通过在 style 中书写 link 将其引入</p>\n<h4 id=\"6vscode中使用emmet语法快速书写代码\"><a class=\"markdownIt-Anchor\" href=\"#6vscode中使用emmet语法快速书写代码\">#</a> 6.vscode 中使用 emmet 语法快速书写代码</h4>\n<p><a href=\"https://imgtu.com/i/IQnSLn\"><img src=\"https://z3.ax1x.com/2021/11/06/IQnSLn.png\" alt=\"IQnSLn.png\"></a></p>\n<h4 id=\"7选择器拓展\"><a class=\"markdownIt-Anchor\" href=\"#7选择器拓展\">#</a> 7. 选择器拓展</h4>\n<p><a href=\"https://imgtu.com/i/IQnZQJ\"><img src=\"https://z3.ax1x.com/2021/11/06/IQnZQJ.png\" alt=\"IQnZQJ.png\"></a></p>\n<h6 id=\"后代选择器\"><a class=\"markdownIt-Anchor\" href=\"#后代选择器\">#</a> 后代选择器</h6>\n<p>顾名思义就是将大元素中包括的小元素提取出来，这里通过列子来展示<br>\n<a href=\"https://imgtu.com/i/IQnCd0\"><img src=\"https://z3.ax1x.com/2021/11/06/IQnCd0.png\" alt=\"IQnCd0.png\"></a></p>\n<h6 id=\"子元素选择器\"><a class=\"markdownIt-Anchor\" href=\"#子元素选择器\">#</a> 子元素选择器</h6>\n<p>例如上面的 ol li 变成 ol&gt;li 就只对 ol 中的下一级 li 有用也就是他的儿子，而他的下下级，也就是孙子则不起作用</p>\n<h6 id=\"并集选择器\"><a class=\"markdownIt-Anchor\" href=\"#并集选择器\">#</a> 并集选择器</h6>\n<p>在标签和标签中间用逗号连接，这样就可以达到同时对两个盒子都起作用的效果</p>\n<blockquote>\n<p>例如 div,p,li {}</p>\n</blockquote>\n<p>需要注意的是最后一个选择器不需要加逗号</p>\n<h6 id=\"链接伪类选择器\"><a class=\"markdownIt-Anchor\" href=\"#链接伪类选择器\">#</a> 链接伪类选择器</h6>\n<p><a href=\"https://imgtu.com/i/IJqEWt\"><img src=\"https://z3.ax1x.com/2021/11/09/IJqEWt.png\" alt=\"IJqEWt.png\"></a></p>\n<blockquote>\n<p>X:GGGG {}</p>\n</blockquote>\n<p>X 可以是你的选择器中的任何<br>\n：后面可以添加 4 中元素 (其中 hover 最经常使用)：<br>\nlink: 未访问链接：把没有点击过的链接选择出来<br>\n visited: 访问过的链接，把点击过的链接选择出来<br>\n hover: 当鼠标经过时<br>\n active: 鼠标点击但是还未弹起来时<br>\n<a href=\"https://imgtu.com/i/IQmxMj\"><img src=\"https://z3.ax1x.com/2021/11/06/IQmxMj.png\" alt=\"IQmxMj.png\"></a></p>\n<h6 id=\"focus选择器\"><a class=\"markdownIt-Anchor\" href=\"#focus选择器\">#</a> focus 选择器</h6>\n<p>把获得光标的 input 选择显示出来<br>\n下面是代码，可以通过自己运行来进行查看<br>\n<a href=\"https://imgtu.com/i/IQnPoV\"><img src=\"https://z3.ax1x.com/2021/11/06/IQnPoV.png\" alt=\"IQnPoV.png\"></a></p>\n<h4 id=\"8元素显示模式\"><a class=\"markdownIt-Anchor\" href=\"#8元素显示模式\">#</a> 8. 元素显示模式</h4>\n<p><a href=\"https://imgtu.com/i/IJqmy8\"><img src=\"https://z3.ax1x.com/2021/11/09/IJqmy8.png\" alt=\"IJqmy8.png\"></a></p>\n<h6 id=\"块级元素\"><a class=\"markdownIt-Anchor\" href=\"#块级元素\">#</a> 块级元素</h6>\n<p><a href=\"https://imgtu.com/i/IQnkJU\"><img src=\"https://z3.ax1x.com/2021/11/06/IQnkJU.png\" alt=\"IQnkJU.png\"></a></p>\n<h6 id=\"行内元素\"><a class=\"markdownIt-Anchor\" href=\"#行内元素\">#</a> 行内元素</h6>\n<p><a href=\"https://imgtu.com/i/IQnAWF\"><img src=\"https://z3.ax1x.com/2021/11/06/IQnAWF.png\" alt=\"IQnAWF.png\"></a></p>\n<h6 id=\"行内块元素\"><a class=\"markdownIt-Anchor\" href=\"#行内块元素\">#</a> 行内块元素</h6>\n<p>特殊情况，同时具有块级元素和行内元素的特点，可以进行的大小设置，也可以书写汉字，但是大小会随着汉字的多少而改变</p>\n<h6 id=\"元素显示模式转换\"><a class=\"markdownIt-Anchor\" href=\"#元素显示模式转换\">#</a> 元素显示模式转换</h6>\n<blockquote>\n<pre><code> display:   ;\n</code></pre>\n</blockquote>\n<p>inline: 行内元素<br>\n block: 块级元素<br>\n inline-block: 行内块元素<br>\n<strong>学到这里去做一下小米侧边栏试试吧</strong></p>\n<h6 id=\"单行文字垂直居中\"><a class=\"markdownIt-Anchor\" href=\"#单行文字垂直居中\">#</a> 单行文字垂直居中</h6>\n<p>也就是上面和大家提及过的，这里让 height 和 line-height 相同即可</p>\n<h4 id=\"9背景\"><a class=\"markdownIt-Anchor\" href=\"#9背景\">#</a> 9. 背景</h4>\n<p><a href=\"https://imgtu.com/i/IQ6dHA\"><img src=\"https://z3.ax1x.com/2021/11/06/IQ6dHA.png\" alt=\"IQ6dHA.png\"></a></p>\n<h6 id=\"背景颜色\"><a class=\"markdownIt-Anchor\" href=\"#背景颜色\">#</a> 背景颜色</h6>\n<blockquote>\n<p>background-color: ;</p>\n</blockquote>\n<p>后面的元素参照前面 color 属性</p>\n<h6 id=\"背景图片\"><a class=\"markdownIt-Anchor\" href=\"#背景图片\">#</a> 背景图片</h6>\n<blockquote>\n<p>background-image: url (链接 / 地址)；</p>\n</blockquote>\n<h6 id=\"背景平铺\"><a class=\"markdownIt-Anchor\" href=\"#背景平铺\">#</a> 背景平铺</h6>\n<blockquote>\n<p>background-repeat: ;</p>\n</blockquote>\n<p>no-repeat (常用): 不平铺<br>\n repeat (默认): 平铺<br>\n repeat-x: 沿着 X 轴平铺<br>\n repeat-y: 沿着 Y 轴平铺<br>\n<strong>背景图片会压住背景颜色</strong><br>\n<a href=\"https://imgtu.com/i/IQnFiT\"><img src=\"https://z3.ax1x.com/2021/11/06/IQnFiT.png\" alt=\"IQnFiT.png\"></a></p>\n<h6 id=\"背景位置\"><a class=\"markdownIt-Anchor\" href=\"#背景位置\">#</a> 背景位置</h6>\n<blockquote>\n<p>background-position: ;</p>\n</blockquote>\n<p>left top center right bottom<br>\n 也可以用 right center 等同时使用 但是有几点需要注意<br>\n 1. 如果是方位名词  right center 和 center right 效果是等价的 跟顺序没有关系<br>\n 2. 当有参数省略时，并且不全是方位名字时，例如 right top ,<br>\n 省略 right，此时 top 会自动顶部对齐，而省略的会被判定为水平居中<br>\n省略 top，则会被判定为垂直居中<br>\n<a href=\"https://imgtu.com/i/IQnEz4\"><img src=\"https://z3.ax1x.com/2021/11/06/IQnEz4.png\" alt=\"IQnEz4.png\"></a><br>\n 也可以用具体的数据来进行移动，主要用于精灵图<br>\n<a href=\"https://imgtu.com/i/IQney9\"><img src=\"https://z3.ax1x.com/2021/11/06/IQney9.png\" alt=\"IQney9.png\"></a><br>\n 需要注意的时，html 的 X 轴向右，而 y 轴是向下的，需要向反方向移动时可以添加负号</p>\n<h6 id=\"背景固定\"><a class=\"markdownIt-Anchor\" href=\"#背景固定\">#</a> 背景固定</h6>\n<blockquote>\n<p>backgrounf-attachment: fixed;</p>\n</blockquote>\n<p>将背景图片固定，这样滑动鼠标滚轮时，背景图片会一直存在于网页上，并不会滑走<br>\n<a href=\"https://imgtu.com/i/IQnmLR\"><img src=\"https://z3.ax1x.com/2021/11/06/IQnmLR.png\" alt=\"IQnmLR.png\"></a></p>\n<h6 id=\"背景属性复合写法\"><a class=\"markdownIt-Anchor\" href=\"#背景属性复合写法\">#</a> 背景属性复合写法</h6>\n<p><a href=\"https://imgtu.com/i/IQ6tje\"><img src=\"https://z3.ax1x.com/2021/11/06/IQ6tje.png\" alt=\"IQ6tje.png\"></a></p>\n<h6 id=\"背景半透明\"><a class=\"markdownIt-Anchor\" href=\"#背景半透明\">#</a> 背景半透明</h6>\n<p>主要这个不是放在 background-color 中</p>\n<blockquote>\n<p>background: rgba(X,X,X,X);</p>\n</blockquote>\n",
            "tags": [
                "Css"
            ]
        },
        {
            "id": "https://github.com/YogMas/YogMas.github.io/2021/11/06/css2/",
            "url": "https://github.com/YogMas/YogMas.github.io/2021/11/06/css2/",
            "title": "Css-second",
            "date_published": "2021-11-05T16:00:00.000Z",
            "content_html": "<h1 id=\"css2\"><a class=\"markdownIt-Anchor\" href=\"#css2\">#</a> css2</h1>\n<h3 id=\"the-article-from-yogmas-also-sam\"><a class=\"markdownIt-Anchor\" href=\"#the-article-from-yogmas-also-sam\">#</a> the article from yogmas also sam</h3>\n<h4 id=\"1css选择器的性质\"><a class=\"markdownIt-Anchor\" href=\"#1css选择器的性质\">#</a> 1.css 选择器的性质</h4>\n<h6 id=\"css层叠性\"><a class=\"markdownIt-Anchor\" href=\"#css层叠性\">#</a> css 层叠性</h6>\n<p>长江后浪推前浪，前浪死在沙滩上<br>\n当两个完全相同的选择器写在一起时，此时根据就近原则处理</p>\n<h6 id=\"css继承性\"><a class=\"markdownIt-Anchor\" href=\"#css继承性\">#</a> css 继承性</h6>\n<p>大元素中的小元素会继承写在大元素中的属性</p>\n<h6 id=\"行高的继承\"><a class=\"markdownIt-Anchor\" href=\"#行高的继承\">#</a> 行高的继承</h6>\n<p><a href=\"https://imgtu.com/i/IQ6YcD\"><img src=\"https://z3.ax1x.com/2021/11/06/IQ6YcD.png\" alt=\"IQ6YcD.png\"></a></p>\n<p>孩子拥有 font-size 元素会优先使用定义在自身的，而后面的倍数孩子自身没有就会继承父亲的倍数</p>\n<h6 id=\"css优先级\"><a class=\"markdownIt-Anchor\" href=\"#css优先级\">#</a> css 优先级</h6>\n<p>这个主要是根据后面的权重的大小而判定的，权重大的优先。</p>\n<h6 id=\"css权重\"><a class=\"markdownIt-Anchor\" href=\"#css权重\">#</a> css 权重</h6>\n<p><a href=\"https://imgtu.com/i/IQ6UnH\"><img src=\"https://z3.ax1x.com/2021/11/06/IQ6UnH.png\" alt=\"IQ6UnH.png\"></a></p>\n<h6 id=\"权重的叠加\"><a class=\"markdownIt-Anchor\" href=\"#权重的叠加\">#</a> 权重的叠加</h6>\n<p>权重的叠加可以用加减法来计算<br>\n例如 0,1,0,0 相当于 100</p>\n<h4 id=\"2盒子模型\"><a class=\"markdownIt-Anchor\" href=\"#2盒子模型\">#</a> 2. 盒子模型</h4>\n<p>盒子通常是块级元素<br>\n也可以通过 display 将其变成块级元素 a 元素通常使用这种方法</p>\n<h6 id=\"盒子边框\"><a class=\"markdownIt-Anchor\" href=\"#盒子边框\">#</a> 盒子边框</h6>\n<p><a href=\"https://imgtu.com/i/IQ6aBd\"><img src=\"https://z3.ax1x.com/2021/11/06/IQ6aBd.png\" alt=\"IQ6aBd.png\"></a></p>\n<blockquote>\n<p>border-width: ;<br>\nborder-style: ;<br>\nborder-color: ;<br>\nborder:width style color ; 复合写法</p>\n</blockquote>\n<p>这边建议大家使用复合写法<br>\n style:solid 实线 dotted 虚线 dashed 更大点的虚线</p>\n<p><strong>边框会影响盒子的实际大小</strong></p>\n<h6 id=\"盒子内边框\"><a class=\"markdownIt-Anchor\" href=\"#盒子内边框\">#</a> 盒子内边框</h6>\n<p><a href=\"https://imgtu.com/i/IQ66gS\"><img src=\"https://z3.ax1x.com/2021/11/06/IQ66gS.png\" alt=\"IQ66gS.png\"></a></p>\n<blockquote>\n<p>padding: ;<br>\npadding-left: ;</p>\n</blockquote>\n<p>同理 left 可以换成其他的方位</p>\n<p>内边距复合写法：从顶部顺时针数<br>\n<strong>内边距会影响盒子的大小</strong></p>\n<p>内边距不会影响盒子大小的情况:<br>\n 当盒子内没有给宽时，padding-left/right 不会影响<br>\n没有给高时 padding-top/bottom 不会影响</p>\n<h6 id=\"盒子外边距\"><a class=\"markdownIt-Anchor\" href=\"#盒子外边距\">#</a> 盒子外边距</h6>\n<blockquote>\n<p>margin:  ;<br>\nmargin-top/XXX: ;</p>\n</blockquote>\n<p>复合写法和内边距同理</p>\n<p><strong>外边距典型应用</strong>:<br>\nmargin: XXXpx auto;<br>\n 此时 auto 代表左右两边自动设置可以让盒子水平对齐</p>\n<h6 id=\"行内元素或行内块元素水平居中对齐\"><a class=\"markdownIt-Anchor\" href=\"#行内元素或行内块元素水平居中对齐\">#</a> 行内元素或行内块元素水平居中对齐</h6>\n<p>margin 对行内元素没有作用，但是可以给这两种元素的父盒子添加 text-align:center;</p>\n<h6 id=\"外边距合并\"><a class=\"markdownIt-Anchor\" href=\"#外边距合并\">#</a> 外边距合并</h6>\n<p>当子盒子给 margin 时，父盒子和子盒子会塌陷，两个盒子会边框重合</p>\n<h6 id=\"清除内外边距\"><a class=\"markdownIt-Anchor\" href=\"#清除内外边距\">#</a> 清除内外边距</h6>\n<p>通常浏览器会自带内外边距这时就需要使用通用符选择器将浏览器自带的边距出去</p>\n<blockquote>\n<pre><code>* {padding:0 ;\n   margin:0;}\n</code></pre>\n</blockquote>\n<h6 id=\"圆角边框\"><a class=\"markdownIt-Anchor\" href=\"#圆角边框\">#</a> 圆角边框</h6>\n<blockquote>\n<p>border-radius: Xpx ;</p>\n</blockquote>\n<p>原理：利用一个半径为 Xpx 的圆，与边角重叠，然后切去没有重叠的边角；</p>\n<h6 id=\"盒子阴影\"><a class=\"markdownIt-Anchor\" href=\"#盒子阴影\">#</a> 盒子阴影</h6>\n<p><a href=\"https://imgtu.com/i/IQCJfI\"><img src=\"https://z3.ax1x.com/2021/11/06/IQCJfI.png\" alt=\"IQCJfI.png\"></a></p>\n<blockquote>\n<p>box-shadow: X X X X X;</p>\n</blockquote>\n<p>由左到右依次为 往右边移动的距离 往下面移动的距离 阴影发散度 (往四面八方发散)  往四面八方扩散的距离 颜色 (通常是 rgba 控制)</p>\n<h6 id=\"文字阴影\"><a class=\"markdownIt-Anchor\" href=\"#文字阴影\">#</a> 文字阴影</h6>\n<blockquote>\n<p>text-shadow:X X X rgba;</p>\n</blockquote>\n<p>分别是 往右边移动的距离 往下面移动的距离 虚实度 (越大越虚)</p>\n<h6 id=\"行内块元素中间有缝隙\"><a class=\"markdownIt-Anchor\" href=\"#行内块元素中间有缝隙\">#</a> 行内块元素中间有缝隙</h6>\n<h4 id=\"3浮动\"><a class=\"markdownIt-Anchor\" href=\"#3浮动\">#</a> 3. 浮动</h4>\n<blockquote>\n<pre><code>  float: left/right;\n</code></pre>\n</blockquote>\n<h6 id=\"浮动特性-脱标\"><a class=\"markdownIt-Anchor\" href=\"#浮动特性-脱标\">#</a> 浮动特性 - 脱标</h6>\n<p>1. 脱离标准普通流的控制（浮）移动到指定位置（动）。<br>\n2. 浮动的盒子不在保留原先的位置</p>\n<p><strong>浮动元素具有行内块元素的特点</strong><br>\n浮动盒子通常搭配标准流父盒子</p>\n<h6 id=\"浮动的注意点\"><a class=\"markdownIt-Anchor\" href=\"#浮动的注意点\">#</a> 浮动的注意点</h6>\n<p>1. 如果一个子元素浮动了，尽量其他盒子也浮动，这样保证这些子元素一行显示</p>\n<h6 id=\"清除浮动的方法\"><a class=\"markdownIt-Anchor\" href=\"#清除浮动的方法\">#</a> 清除浮动的方法</h6>\n<p><a href=\"https://imgtu.com/i/IQCN1P\"><img src=\"https://z3.ax1x.com/2021/11/06/IQCN1P.png\" alt=\"IQCN1P.png\"></a></p>\n<p><a href=\"https://imgtu.com/i/IJqJS0\"><img src=\"https://z3.ax1x.com/2021/11/09/IJqJS0.png\" alt=\"IJqJS0.png\"></a></p>\n<p>额外标签法：在子盒子的最后新增一个块级盒子 并且用 css 给快捷盒子加上 clear:both; 属性</p>\n<p>父元素 overflow: 给父元素加上一个 overflow: hidden; 的 css 属性<br>\n<a href=\"https://imgtu.com/i/IJqtyT\"><img src=\"https://z3.ax1x.com/2021/11/09/IJqtyT.png\" alt=\"IJqtyT.png\"></a></p>\n<p>伪元素清除:</p>\n<blockquote>\n<p>.clearfix:after {<br>\ncontent: “”;<br>\ndisplay: block;<br>\nheight: 0;<br>\nclear: both;<br>\nvisibility: hidden;<br>\n}<br>\n.clearfix {<br>\nIE6、7 专有<br>\n zoom: 1;<br>\n}</p>\n</blockquote>\n<p><a href=\"https://imgtu.com/i/IQ60AI\"><img src=\"https://z3.ax1x.com/2021/11/06/IQ60AI.png\" alt=\"IQ60AI.png\"></a></p>\n<p>给父盒子一个 class 为 clearfix 然后将这串代码心如 css 中</p>\n<p>双伪元素清除:</p>\n<blockquote>\n<p>.clearfix:before,<br>\n.clearfix:after {<br>\ncontent: “”;<br>\ndisplay: table;<br>\n}<br>\n.clearfix:after {<br>\nclear: both;<br>\n}<br>\n.clearfix {<br>\n*zoom: 1;<br>\n}</p>\n</blockquote>\n<p>同理给一个 clearfix 标签，然后将这串代码写入 css 中</p>\n<h4 id=\"4定位\"><a class=\"markdownIt-Anchor\" href=\"#4定位\">#</a> 4. 定位</h4>\n<p><a href=\"https://imgtu.com/i/IQCGtA\"><img src=\"https://z3.ax1x.com/2021/11/06/IQCGtA.png\" alt=\"IQCGtA.png\"></a><br>\n<a href=\"https://imgtu.com/i/IJqwTJ\"><img src=\"https://z3.ax1x.com/2021/11/09/IJqwTJ.png\" alt=\"IJqwTJ.png\"></a></p>\n<blockquote>\n<p>position: ;</p>\n</blockquote>\n<p>static: 默认静态定位<br>\n absolute: 绝对定位<br>\n relative: 相对定位<br>\n fixed: 固定定位<br>\n sticky: 粘性定位</p>\n<p>相对定位：可以进行定位，但依旧会占用空间<br>\n绝对定位<br>\n如果没施加绝对定位的盒子没有父盒子，那么绝对定位就是在浏览器的基础上的<br>\n如果绝对定位的盒子有父盒子，那么绝对定位就是在父盒子的基础上，并且<strong>父盒子一定要有定位，否则绝对定位就会失效</strong>所以通常说相对定位就是给绝对定位当爹的</p>\n<p>固定定位：会固定在屏幕上，无视浏览器的滑块移动</p>\n<p>粘性定位：会先随着浏览器滑块的滑动而滑动，但是后来会静止，并且无法滑出浏览器屏幕</p>\n<h6 id=\"定位的堆叠顺序\"><a class=\"markdownIt-Anchor\" href=\"#定位的堆叠顺序\">#</a> 定位的堆叠顺序</h6>\n<p>如果有很多个绝对定位，可能会放在同一个位置，这时候需要确定谁放置在最上面</p>\n<blockquote>\n<pre><code>z-index: ;\n</code></pre>\n</blockquote>\n<p>默认为 0，数值越大显示等级越高</p>\n<h6 id=\"小技巧-绝对定位的水平垂直居中\"><a class=\"markdownIt-Anchor\" href=\"#小技巧-绝对定位的水平垂直居中\">#</a> 小技巧 - 绝对定位的水平垂直居中</h6>\n<p>1.left 走 50%  父容器宽度的一半<br>\n 2.margin 负值 往左边走 自己盒子宽度的一半</p>\n<h6 id=\"定位的特殊特性\"><a class=\"markdownIt-Anchor\" href=\"#定位的特殊特性\">#</a> 定位的特殊特性</h6>\n<p><a href=\"https://imgtu.com/i/IQC1TH\"><img src=\"https://z3.ax1x.com/2021/11/06/IQC1TH.png\" alt=\"IQC1TH.png\"></a><br>\n<a href=\"https://imgtu.com/i/IQCtpt\"><img src=\"https://z3.ax1x.com/2021/11/06/IQCtpt.png\" alt=\"IQCtpt.png\"></a></p>\n<h6 id=\"定位和浮动的差异\"><a class=\"markdownIt-Anchor\" href=\"#定位和浮动的差异\">#</a> 定位和浮动的差异</h6>\n<p>定位和浮动有相似部分，类如都会转化为行内块元素，都会压住盒子，但是浮动不会压住文字，定位会将所有东西压住</p>\n<h4 id=\"5显示隐藏\"><a class=\"markdownIt-Anchor\" href=\"#5显示隐藏\">#</a> 5. 显示隐藏</h4>\n<h6 id=\"display\"><a class=\"markdownIt-Anchor\" href=\"#display\">#</a> display</h6>\n<blockquote>\n<p>display: ;</p>\n</blockquote>\n<p><a href=\"https://imgtu.com/i/IQCaX8\"><img src=\"https://z3.ax1x.com/2021/11/06/IQCaX8.png\" alt=\"IQCaX8.png\"></a></p>\n<h6 id=\"visibility\"><a class=\"markdownIt-Anchor\" href=\"#visibility\">#</a> visibility</h6>\n<p><a href=\"https://imgtu.com/i/IQCwnS\"><img src=\"https://z3.ax1x.com/2021/11/06/IQCwnS.png\" alt=\"IQCwnS.png\"></a></p>\n<h6 id=\"overflow\"><a class=\"markdownIt-Anchor\" href=\"#overflow\">#</a> overflow</h6>\n<blockquote>\n<p>overflow: ;</p>\n</blockquote>\n<p><a href=\"https://imgtu.com/i/IQC00g\"><img src=\"https://z3.ax1x.com/2021/11/06/IQC00g.png\" alt=\"IQC00g.png\"></a><br>\n<a href=\"https://imgtu.com/i/IQCB7Q\"><img src=\"https://z3.ax1x.com/2021/11/06/IQCB7Q.png\" alt=\"IQCB7Q.png\"></a></p>\n<h4 id=\"6精灵图\"><a class=\"markdownIt-Anchor\" href=\"#6精灵图\">#</a> 6. 精灵图</h4>\n<p>这里不好介绍怎样操作只能简单而言<br>\n一张包含各种小图片的大图片<br>\n利用前面所讲的背景图片位置的移动使其只能显示出一张小图片来<br>\n问：为什么需要精灵图<br>\n利用精灵图可以将多张图片整合在一起，从而可以减少信息的发送和接受量，减少服务器的负担</p>\n<h4 id=\"7字体图标的使用\"><a class=\"markdownIt-Anchor\" href=\"#7字体图标的使用\">#</a> 7. 字体图标的使用</h4>\n<p>通过在网站上寻找字体图标，下载</p>\n<p>然后将代码写入 css 中</p>\n<blockquote>\n<p>@font-face {<br>\nfont-family: ‘icomoon’;<br>\nsrc:  url(‘fonts/icomoon.eot?p4ssmb’);<br>\nsrc:  url(‘fonts/icomoon.eot?p4ssmb#iefix’) format(‘embedded-opentype’),<br>\nurl(‘fonts/icomoon.ttf?p4ssmb’) format(‘truetype’),<br>\nurl(‘fonts/icomoon.woff?p4ssmb’) format(‘woff’),<br>\nurl(‘fonts/icomoon.svg?p4ssmb#icomoon’) format(‘svg’);<br>\nfont-weight: normal;<br>\nfont-style: normal;<br>\nfont-display: block;<br>\n}</p>\n</blockquote>\n<p>font 文件夹移动到主文件夹中</p>\n<p>此时就可以用字体图标代码来进行表示字体图标</p>\n<p>好处：可以对图标进行改变颜色大小等等的改变字体时用到的属性</p>\n<h4 id=\"8css三角的制作\"><a class=\"markdownIt-Anchor\" href=\"#8css三角的制作\">#</a> 8.css 三角的制作</h4>\n<p>利用 cssborder 属性来进行三角的制作<br>\n由于不好叙述，自己输入，理解并体验这几组代码，应该就能理解 css 三角的制作<br>\n<a href=\"https://imgtu.com/i/IQCsts\"><img src=\"https://z3.ax1x.com/2021/11/06/IQCsts.png\" alt=\"IQCsts.png\"></a><br>\n<a href=\"https://imgtu.com/i/IQCrkj\"><img src=\"https://z3.ax1x.com/2021/11/06/IQCrkj.png\" alt=\"IQCrkj.png\"></a></p>\n<h4 id=\"9用户界面样式\"><a class=\"markdownIt-Anchor\" href=\"#9用户界面样式\">#</a> 9. 用户界面样式</h4>\n<h6 id=\"表单轮廓\"><a class=\"markdownIt-Anchor\" href=\"#表单轮廓\">#</a> 表单轮廓</h6>\n<p>由于点击表单或者 text 文本框时边框上会出现颜色变化边框变大拖拽文本域等一系列的反应，从而利用 css 取消边框的轮廓</p>\n<blockquote>\n<pre><code>outline: none;  (input,textarea)\n</code></pre>\n</blockquote>\n<blockquote>\n<pre><code>resize:none; (textarea)\n</code></pre>\n<p>用来防止拖拽文本域的</p>\n</blockquote>\n<h6 id=\"鼠标样式\"><a class=\"markdownIt-Anchor\" href=\"#鼠标样式\">#</a> 鼠标样式</h6>\n<blockquote>\n<p>cursor: ;</p>\n</blockquote>\n<p>default: 小白鼠标样式<br>\n pointer: 鼠标小手样式<br>\n move: 鼠标移动样式<br>\n text: 鼠标文本样式<br>\n not-allowed: 鼠标禁止样式</p>\n<h6 id=\"图片文字垂直居中\"><a class=\"markdownIt-Anchor\" href=\"#图片文字垂直居中\">#</a> 图片文字垂直居中</h6>\n<p><a href=\"https://imgtu.com/i/IJqrf1\"><img src=\"https://z3.ax1x.com/2021/11/09/IJqrf1.png\" alt=\"IJqrf1.png\"></a></p>\n<h6 id=\"图片底侧有空白缝隙的解决方案\"><a class=\"markdownIt-Anchor\" href=\"#图片底侧有空白缝隙的解决方案\">#</a> 图片底侧有空白缝隙的解决方案</h6>\n<p>先将图片变为块级元素，然后再给块级元素设置边框就可以解决</p>\n<h4 id=\"10文字溢出显示\"><a class=\"markdownIt-Anchor\" href=\"#10文字溢出显示\">#</a> 10. 文字溢出显示</h4>\n<h6 id=\"单行文字溢出显示\"><a class=\"markdownIt-Anchor\" href=\"#单行文字溢出显示\">#</a> 单行文字溢出显示</h6>\n<p><a href=\"https://imgtu.com/i/IQCyhn\"><img src=\"https://z3.ax1x.com/2021/11/06/IQCyhn.png\" alt=\"IQCyhn.png\"></a></p>\n<h6 id=\"多行文字溢出显示\"><a class=\"markdownIt-Anchor\" href=\"#多行文字溢出显示\">#</a> 多行文字溢出显示</h6>\n<p><a href=\"https://imgtu.com/i/IJqc6K\"><img src=\"https://z3.ax1x.com/2021/11/09/IJqc6K.png\" alt=\"IJqc6K.png\"></a></p>\n<h4 id=\"11margin负值的巧妙运动\"><a class=\"markdownIt-Anchor\" href=\"#11margin负值的巧妙运动\">#</a> 11.margin 负值的巧妙运动</h4>\n<p>如果多个盒子都有边框，此时相交部分边框会重合在一起，从而增加边框的大小，此时只需要写入 margin-left: -1px; 就可以得到解决</p>\n<h4 id=\"12文字围绕浮动元素\"><a class=\"markdownIt-Anchor\" href=\"#12文字围绕浮动元素\">#</a> 12. 文字围绕浮动元素</h4>\n<p>众所周知浮动元素是不占用空间的，此时如果将一个照片浮动，而需要在照片旁边写入汉字的话，汉字是否会出现在图片的下方呢，答案是不会，因为汉字会围绕浮动元素</p>\n<h4 id=\"13css初始化\"><a class=\"markdownIt-Anchor\" href=\"#13css初始化\">#</a> 13.css 初始化</h4>\n<p>这里给出一串代码，初始化网页，将网页元素自带的一些 css 属性给去掉</p>\n<blockquote>\n<p>/* 把我们所有标签的内外边距清零 <em>/<br>\n* {<br>\nmargin: 0;<br>\npadding: 0<br>\n}<br>\n/</em>em 和 i 斜体的文字不倾斜 <em>/<br>\nem,<br>\ni {<br>\nfont-style: normal<br>\n}<br>\n/</em> 去掉 li 的小圆点 <em>/<br>\nli {<br>\nlist-style: none<br>\n}<br>\nimg {<br>\n/</em>border 0 照顾低版本浏览器 如果 图片外面包含了链接会有边框的问题 <em>/<br>\nborder: 0;<br>\n/</em> 取消图片底侧有空白缝隙的问题 <em>/<br>\nvertical-align: middle<br>\n}<br>\nbutton {<br>\n/</em> 当我们鼠标经过 button 按钮的时候，鼠标变成小手 <em>/<br>\ncursor: pointer<br>\n}<br>\na {<br>\ncolor: #666;<br>\ntext-decoration: none<br>\n}<br>\na:hover {<br>\ncolor: #c81623<br>\n}<br>\nbutton,<br>\ninput {<br>\n/</em> “\\5B8B\\4F53” 就是宋体的意思 这样浏览器兼容性比较好 <em>/<br>\nfont-family: Microsoft YaHei, Heiti SC, tahoma, arial, Hiragino Sans GB, “\\5B8B\\4F53”, sans-serif<br>\n}<br>\nbody {<br>\n/</em> CSS3 抗锯齿形 让文字显示的更加清晰 <em>/<br>\n-webkit-font-smoothing: antialiased;<br>\nbackground-color: #fff;<br>\nfont: 12px/1.5 Microsoft YaHei, Heiti SC, tahoma, arial, Hiragino Sans GB, “\\5B8B\\4F53”, sans-serif;<br>\ncolor: #666<br>\n}<br>\n.hide,<br>\n.none {<br>\ndisplay: none<br>\n}<br>\n/</em> 清除浮动 */<br>\n.clearfix:after {<br>\nvisibility: hidden;<br>\nclear: both;<br>\ndisplay: block;<br>\ncontent: “.”;<br>\nheight: 0<br>\n}<br>\n.clearfix {<br>\n*zoom: 1<br>\n}</p>\n</blockquote>\n<h4 id=\"14css新增属性\"><a class=\"markdownIt-Anchor\" href=\"#14css新增属性\">#</a> 14.css 新增属性</h4>\n<h6 id=\"新增属性选择器\"><a class=\"markdownIt-Anchor\" href=\"#新增属性选择器\">#</a> 新增属性选择器</h6>\n<p><a href=\"https://imgtu.com/i/IJqRmD\"><img src=\"https://z3.ax1x.com/2021/11/09/IJqRmD.png\" alt=\"IJqRmD.png\"></a></p>\n<p>通过举例进行说明<br>\n input [type=text] {}<br>\n 这个表示选出 input 中 type=text 的元素</p>\n<p>div [class^=XXX]: 选出以 XXX 开头的元素</p>\n<p>div [class$=XXX]: 选出以 XXX 结尾的元素</p>\n<h6 id=\"结构伪类选择器\"><a class=\"markdownIt-Anchor\" href=\"#结构伪类选择器\">#</a> 结构伪类选择器</h6>\n<p><a href=\"https://imgtu.com/i/IJqgOO\"><img src=\"https://z3.ax1x.com/2021/11/09/IJqgOO.png\" alt=\"IJqgOO.png\"></a></p>\n<blockquote>\n<pre><code>xxx:firstchild\nxxx:secondchild\nxxx:nth-child(number)\n</code></pre>\n</blockquote>\n<p>都是选出第几个子元素的意思</p>\n<p><a href=\"https://imgtu.com/i/IJq4kd\"><img src=\"https://z3.ax1x.com/2021/11/09/IJq4kd.png\" alt=\"IJq4kd.png\"></a></p>\n<p>括号里面不仅仅可以跟数字，也可以很有特殊意义的单词，甚至可以跟公式 n 将取自然数</p>\n<p>nth-of-type 选择器</p>\n<p>两个选择器的区别如下<br>\n<a href=\"https://imgtu.com/i/IJqfTH\"><img src=\"https://z3.ax1x.com/2021/11/09/IJqfTH.png\" alt=\"IJqfTH.png\"></a></p>\n<p>举例子来说明:</p>\n<blockquote>\n<pre><code>&lt;p&gt;光头强&lt;/p&gt;\n&lt;div&gt;熊大&lt;/div&gt;\n&lt;div&gt;熊二&lt;/div&gt;\n</code></pre>\n</blockquote>\n<p>此时如果给一个 section div:nth-child (1) { background-color: red; } 指令，你觉得谁会被加上红色呢<br>\n答案是都不会<br>\n child 先看后面的数字 1   ，此时第一个孩子是 p，然后再来看前面的 div，发现 div 不是 P，所以不成立 谁都不给</p>\n<p>但如果给一个 section div:nth-of-type (1) {<br>\nbackground-color: blue;} 指令呢<br>\n答案是会给熊大，type 先看前面的 div，找出 div，再发现后面的 1，所以会给 div 中的第一个孩子</p>\n<h6 id=\"伪元素选择器\"><a class=\"markdownIt-Anchor\" href=\"#伪元素选择器\">#</a> 伪元素选择器</h6>\n<blockquote>\n<p>XXX::before/after {<br>\ncontent:’’;<br>\n}<br>\n 这里面的 content 是必须加的，表示里面的内容，即使你没有内容要写，也需要写出 content 否则无效，注意是单引号</p>\n</blockquote>\n<p>用处：可以里面 css 来个父元素添加盒子 词的的 before 表示出现在父元素的左边 after 表示出现在父元素的右边</p>\n<h6 id=\"css3盒子模型\"><a class=\"markdownIt-Anchor\" href=\"#css3盒子模型\">#</a> css3 盒子模型</h6>\n<p>前面我们说了 padding 和边框都会撑大盒子，所以说我们使用 border 和 padding 还需要减去其尺寸，现在我们提供了修复的方法</p>\n<blockquote>\n<p>box-sizing:  ;</p>\n</blockquote>\n<p>content-box: 按照原来会撑大盒子的方式<br>\n border-box: 会自动减去撑大的尺寸，保证盒子的尺寸不变</p>\n<h6 id=\"图片模糊处理\"><a class=\"markdownIt-Anchor\" href=\"#图片模糊处理\">#</a> 图片模糊处理</h6>\n<blockquote>\n<p>filter:blur()</p>\n</blockquote>\n<p>blur 是一个函数 小括号里面数值越大，图片越模糊 注意数值要加 px 单位</p>\n<h6 id=\"css3宽度calc函数\"><a class=\"markdownIt-Anchor\" href=\"#css3宽度calc函数\">#</a> css3 宽度 calc 函数</h6>\n<p>calc 函数主要提供了一个计算的方法<br>\n例如在有一个父盒子的前提下，子盒子写出这样一个函数 width: calc (100% - 30px); 表示在父亲 100% 尺寸的前提下始终减去 30px 的宽度</p>\n<h6 id=\"过渡效果\"><a class=\"markdownIt-Anchor\" href=\"#过渡效果\">#</a> 过渡效果</h6>\n<p>大概来说就是将一个瞬间变化的过程转化成阶段性有时间长短的变化<br>\n<a href=\"https://imgtu.com/i/IJqTpt\"><img src=\"https://z3.ax1x.com/2021/11/09/IJqTpt.png\" alt=\"IJqTpt.png\"></a><br>\n 在这里 0s 开始一般可以不写而省略，变化曲线也一遍使用 ease 这是最常用的变化曲线</p>\n",
            "tags": [
                "Css"
            ]
        }
    ]
}